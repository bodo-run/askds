[
  {
    "role": "system",
    "content": "You are a senior software engineer helping debug test failures. Analyze:\n1. Test output\n2. Repository structure\n3. Code changes (git diff)\n4. Relevant test files\nProvide concise, actionable solutions."
  },
  {
    "role": "user",
    "content": "## Repository Structure\n\n>>>> yek.toml\n\nignore_patterns = [\n  \"^repo-serialized/\",\n  \"^node_modules/.*\",\n  \"^askai.yaml$\",\n]\n>>>> tests/example.test.ts\nimport { it, expect, describe } from \"vitest\";\n\ndescribe(\"Dificult numbers\", () => {\n  it(\"odd numbers that don't have the letter 'e' in their spelling\", () => {\n    expect(\n      computeNumbers(\n        {\n          spellingContains: [\"e\"],\n          isOdd: true,\n        },\n        3\n      )\n    ).length.to.be.greaterThan(0);\n  });\n});\n\n/**\n * Given a condition, compute the numbers that satisfy the condition\n */\nfunction computeNumbers(\n  condition: {\n    spellingContains: string[];\n    isOdd: boolean;\n  },\n  max: number\n) {\n  const SPELLINGS = [\n    \"one\",\n    \"two\",\n    \"three\",\n    \"four\",\n    \"five\",\n    \"six\",\n    \"seven\",\n    \"eight\",\n    \"nine\",\n    \"ten\",\n    \"eleven\",\n    \"twelve\",\n    \"thirteen\",\n    \"fourteen\",\n    \"fifteen\",\n    \"sixteen\",\n    \"seventeen\",\n    \"eighteen\",\n    \"nineteen\",\n    \"twenty\",\n  ];\n\n  const TENTHS = [\n    \"\",\n    \"ten\",\n    \"twenty\",\n    \"thirty\",\n    \"forty\",\n    \"fifty\",\n    \"sixty\",\n    \"seventy\",\n    \"eighty\",\n    \"ninety\",\n  ];\n\n  function getSpelling(number: number) {\n    if (number < 1) {\n      throw new Error(\"Number out of range\");\n    }\n    if (SPELLINGS[number - 1]) {\n      return SPELLINGS[number - 1];\n    }\n    const tenthBase = Math.floor(number / 10);\n    const unit = number % 10;\n    return `${TENTHS[tenthBase]}${unit > 0 ? getSpelling(unit) : \"\"}`;\n  }\n\n  function isOdd(number: number) {\n    return number % 2 !== 0;\n  }\n\n  const numbers: number[] = [];\n\n  // for now try 1k 😈\n  for (let i = 1; i <= 1000; i++) {\n    if (condition.isOdd && !isOdd(i)) {\n      continue;\n    }\n    if (\n      condition.spellingContains.every(\n        (letter) => !getSpelling(i).includes(letter)\n      )\n    ) {\n      numbers.push(i);\n    }\n  }\n\n  return numbers;\n}\n\n>>>> src/index.ts\n#!/usr/bin/env node\nimport { execSync, spawn } from \"child_process\";\nimport https from \"https\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { program } from \"commander\";\nimport process, { config } from \"process\";\nimport blessed from \"blessed\";\n\ninterface Config {\n  debug: boolean;\n  testCommand: string;\n  serializeCommand: string;\n  apiKey: string;\n  historyFile: string;\n  testDirs: string[];\n  sourceDirs: string[];\n  testFileExt: string;\n  systemPromptFile?: string;\n  hideReasoning: boolean;\n}\n\ninterface Message {\n  role: \"system\" | \"user\" | \"assistant\";\n  content: string;\n}\n\nconst DEFAULT_PROMPT = [\n  \"You are a senior software engineer helping debug test failures. Analyze:\",\n  \"1. Test output\",\n  \"2. Repository structure\",\n  \"3. Code changes (git diff)\",\n  \"4. Relevant test files\",\n  \"Provide concise, actionable solutions.\",\n].join(\"\\n\");\n\nconst DEFAULT_CONFIG: Omit<Config, \"apiKey\" | \"testCommand\"> = {\n  debug: false,\n  serializeCommand: \"yek\",\n  historyFile: path.join(process.cwd(), \".askai_history.json\"),\n  testDirs: [\"test\", \"tests\"],\n  sourceDirs: [\"src\"],\n  testFileExt: \".ts\",\n  systemPromptFile: \"\",\n  hideReasoning: false,\n};\n\nconst ui = createBlessedUI();\n\nfunction loadConfig(): Config {\n  program\n    .version(\"1.0.0\")\n    .option(\"--debug\", \"Enable debug mode\")\n    .option(\"--serialize <command>\", \"Repository serialization command\")\n    .option(\"--system-prompt <file>\", \"Path to system prompt file\")\n    .option(\"--hide-reasoning\", \"Hide reasoning content\")\n    .arguments(\"[testCommand...]\")\n    .action((testCommand) => {\n      program.opts().testCommand = testCommand.join(\" \");\n    })\n    .parse(process.argv);\n\n  const apiKey = process.env.DEEPSEEK_API_KEY;\n  if (!apiKey) {\n    console.error(\"Error: DEEPSEEK_API_KEY environment variable is required\");\n    process.exit(1);\n  }\n\n  return {\n    ...DEFAULT_CONFIG,\n    apiKey,\n    debug: program.opts().debug || false,\n    serializeCommand:\n      program.opts().serialize || DEFAULT_CONFIG.serializeCommand,\n    testCommand: program.opts().testCommand,\n    systemPromptFile: program.opts().systemPrompt,\n  };\n}\n\nasync function executeCommand(\n  command: string,\n  args: string[],\n  options: {\n    shell: boolean;\n  } = {\n    shell: true,\n  }\n): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const proc = spawn(command, args, {\n      shell: options.shell,\n      stdio: \"pipe\",\n    });\n    let output = \"\";\n\n    proc.stdout.on(\"data\", (data) => (output += data.toString()));\n    proc.stderr.on(\"data\", (data) => (output += data.toString()));\n\n    proc.on(\"close\", (code) => {\n      code === 0\n        ? resolve(output)\n        : reject(new Error(`Command failed with code ${code}\\n${output}`));\n    });\n  });\n}\n\nasync function runTestCommand(\n  testCommand: string,\n  config: Config\n): Promise<string> {\n  const [cmd, ...args] = testCommand.split(/\\s+/);\n  try {\n    if (config.debug) {\n      ui.outputScreen.setContent(`Running test command: ${testCommand}`);\n    }\n    return await executeCommand(cmd, args);\n  } catch (error) {\n    return error instanceof Error ? error.message : String(error);\n  }\n}\n\nasync function serializeRepository(\n  command: string,\n  config: Config\n): Promise<string> {\n  const [cmd, ...args] = command.split(/\\s+/);\n  const result = await executeCommand(cmd, args);\n  if (config.debug) {\n    ui.outputScreen.setContent(`Serialized repository size: ${result.length}`);\n  }\n  return result;\n}\n\nfunction findTestFiles(output: string, config: Config): string[] {\n  const failedTests = new Set(\n    output\n      .split(\"\\n\")\n      .filter((line) => line.toLowerCase().includes(\"fail\"))\n      .map((line) => line.match(/\\b(test\\w*)\\b/)?.[1])\n      .filter(Boolean) as string[]\n  );\n\n  const searchDirs = [...config.testDirs, ...config.sourceDirs]\n    .map((dir) => path.resolve(process.cwd(), dir))\n    .filter((dir) => fs.existsSync(dir));\n  const testFiles = new Set<string>();\n\n  for (const test of failedTests) {\n    for (const dir of searchDirs) {\n      try {\n        const files = fs.readdirSync(dir, { recursive: true });\n        files.forEach((file) => {\n          if (\n            typeof file === \"string\" &&\n            file.endsWith(config.testFileExt) &&\n            fs.readFileSync(path.join(dir, file), \"utf8\").includes(test)\n          ) {\n            testFiles.add(path.join(dir, file));\n          }\n        });\n      } catch (error) {\n        ui.outputScreen.setContent(`Error searching ${dir}: ${error}`);\n      }\n    }\n  }\n\n  return Array.from(testFiles);\n}\n\nasync function getChatHistory(config: Config): Promise<Message[]> {\n  try {\n    const content = await fs.promises.readFile(config.historyFile, \"utf8\");\n    return JSON.parse(content);\n  } catch {\n    return [\n      {\n        role: \"system\",\n        content: config.systemPromptFile\n          ? fs.existsSync(config.systemPromptFile)\n            ? fs.readFileSync(config.systemPromptFile, \"utf8\")\n            : DEFAULT_PROMPT\n          : DEFAULT_PROMPT,\n      },\n    ];\n  }\n}\nfunction handleErrorChunk(chunk: string, config: Config) {\n  try {\n    const json = JSON.parse(chunk);\n    if (json.error) {\n      console.error(\"Error:\", json.error.message);\n      process.exit(1);\n    }\n  } catch {\n    // it's not an error\n  }\n}\n\ninterface BlessedUI {\n  screen: blessed.Widgets.Screen;\n  outputScreen: blessed.Widgets.BoxElement;\n  reasoningLog: blessed.Widgets.BoxElement;\n}\n\nfunction createBlessedUI(): BlessedUI {\n  const screen = blessed.screen({\n    smartCSR: true,\n    title: \"DeepSeek Test Analyzer\",\n  });\n\n  const testResultsLog = blessed.box({\n    parent: screen,\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"50%\",\n    content: \"\",\n    border: {\n      type: \"line\",\n    },\n    label: \" Test Results \",\n    mouse: true,\n    scrollable: true,\n    alwaysScroll: true,\n  });\n\n  const reasoningLog = blessed.box({\n    parent: screen,\n    top: \"50%\",\n    left: 0,\n    width: \"100%\",\n    height: \"50%\",\n    content: \"\",\n    border: {\n      type: \"line\",\n    },\n    label: \" Reasoning \",\n    mouse: true,\n    scrollable: true,\n    alwaysScroll: true,\n  });\n\n  screen.key([\"escape\", \"q\", \"C-c\"], () => {\n    screen.destroy();\n    process.exit(0);\n  });\n\n  screen.render();\n\n  return { screen, outputScreen: testResultsLog, reasoningLog };\n}\n\nfunction debug(...messages: string[]) {\n  ui.outputScreen.setContent(\n    `${ui.outputScreen.getContent()}\\n${messages.join(\"\\n\")}`\n  );\n  ui.screen.render();\n}\n\nfunction printReasoningContent(chunkJsonLine = \"data: {}\", config: Config) {\n  try {\n    const json = JSON.parse(chunkJsonLine.split(\":\")[1])[0];\n    const newReasoningContent = json.delta.reasoning_content;\n    if (newReasoningContent) {\n      if (config.debug) {\n        debug(\"newReasoningContent\", newReasoningContent);\n      }\n\n      const currentContent = ui.reasoningLog.getContent();\n      ui.reasoningLog.setContent(currentContent + newReasoningContent);\n      ui.screen.render();\n      return;\n    }\n  } catch (error: unknown) {\n    // it's not a delta\n  }\n\n  const parts = chunkJsonLine.split(\": \");\n  if (parts.length < 2) {\n    debug(`Invalid chunk: ${chunkJsonLine}`);\n    return;\n  }\n\n  try {\n    const json = JSON.parse(parts[1]);\n    const newReasoningContent =\n      json?.choices?.[0]?.delta?.reasoning_content ||\n      json?.delta?.reasoning_content;\n    if (newReasoningContent) {\n      const cleanContent = newReasoningContent;\n      const currentContent = ui.reasoningLog.getContent();\n      ui.reasoningLog.setContent(currentContent + cleanContent);\n      ui.screen.render();\n    }\n  } catch (error: unknown) {\n    debug(`Error parsing JSON: ${error}`);\n  }\n}\n\nasync function streamAIResponse(\n  config: Config,\n  messages: Message[]\n): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const req = https.request(\n      {\n        hostname: \"api.deepseek.com\",\n        path: \"/chat/completions\",\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${config.apiKey}`,\n        },\n      },\n      (res) => {\n        let responses: any[] = [];\n        res.on(\"data\", (chunk) => {\n          const chunkStr = chunk.toString();\n          handleErrorChunk(chunkStr, config);\n          if (!config.hideReasoning) {\n            printReasoningContent(chunkStr, config);\n          }\n          try {\n            const json = JSON.parse(chunkStr.split(\": \")[1]);\n            responses.push(json);\n          } catch (error) {\n            debug(`Error parsing JSON: ${chunkStr}`);\n          }\n        });\n        res.on(\"end\", () => resolve(responses.join(\"\")));\n      }\n    );\n\n    req.on(\"error\", reject);\n    req.write(\n      JSON.stringify({\n        model: \"deepseek-reasoner\",\n        messages,\n        stream: true,\n      })\n    );\n    req.end();\n  });\n}\n\nasync function getGitDiff(config: Config) {\n  const diff = execSync(\"git diff | cat\", { stdio: \"pipe\" }).toString();\n  if (diff.includes(\"No such file or directory\")) {\n    return \"\";\n  }\n  if (config.debug) {\n    const currentContent = ui.outputScreen.getContent();\n    ui.outputScreen.setContent(`${currentContent}\\nGit Diff:\\n${diff}`);\n    ui.screen.render();\n  }\n  return diff;\n}\n\nasync function main() {\n  const config = loadConfig();\n  if (config.debug) {\n    const debugContent = `Configuration: ${JSON.stringify(config)}`;\n    ui.outputScreen.setContent(debugContent);\n    ui.screen.render();\n  }\n\n  try {\n    const [testOutput, repoStructure, gitDiff] = await Promise.all([\n      runTestCommand(config.testCommand, config),\n      serializeRepository(config.serializeCommand, config),\n      getGitDiff(config),\n    ]);\n\n    ui.outputScreen.setContent(\n      [testOutput, repoStructure, gitDiff].join(\"\\n\\n\")\n    );\n    ui.screen.render();\n\n    if (config.debug) {\n      const currentContent = ui.outputScreen.getContent();\n      ui.outputScreen.setContent(`${currentContent}\\ngitDiff: ${gitDiff}`);\n      ui.screen.render();\n    }\n\n    const testFiles = findTestFiles(testOutput, config);\n    const testContents = testFiles\n      .map((file) => `// ${file}\\n${fs.readFileSync(file, \"utf8\")}`)\n      .join(\"\\n\\n\");\n\n    const messages = await getChatHistory(config);\n    messages.push({\n      role: \"user\",\n      content: [\n        `## Repository Structure\\n${repoStructure}`,\n        `## Test Output\\n${testOutput}`,\n        `## Git Diff\\n${gitDiff}`,\n        `## Test Files\\n${testContents}`,\n      ].join(\"\\n\\n\"),\n    });\n\n    const currentContent = ui.outputScreen.getContent();\n    ui.outputScreen.setContent(`${currentContent}\\nAnalyzing test failures...`);\n    ui.screen.render();\n\n    const aiResponses = await streamAIResponse(config, messages);\n\n    await fs.promises.writeFile(\n      config.historyFile,\n      JSON.stringify([...messages, ...aiResponses], null, 2)\n    );\n\n    ui.outputScreen.destroy();\n    ui.reasoningLog.destroy();\n    ui.screen.destroy();\n    console.log(aiResponses);\n  } catch (error) {\n    ui.outputScreen.destroy();\n    ui.reasoningLog.destroy();\n    ui.screen.destroy();\n    console.error(\"Error:\", error);\n  }\n}\n\nmain().catch(console.error);\n\n>>>> tsconfig.json\n{\n  \"compilerOptions\": {\n    \"target\": \"ES2020\",\n    \"module\": \"CommonJS\",\n    \"outDir\": \"dist\",\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"skipLibCheck\": true,\n    \"types\": [\"node\"]\n  },\n  \"include\": [\"src/**/*.ts\"],\n  \"exclude\": [\"node_modules\", \"dist\"]\n}\n\n>>>> package.json\n{\n  \"name\": \"askds\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"build\": \"tsc\",\n    \"start\": \"node dist/index.js\",\n    \"dev\": \"tsx src/index.ts\",\n    \"test\": \"vitest --watch=false\"\n  },\n  \"keywords\": [],\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"devDependencies\": {\n    \"@types/node\": \"^22.10.7\",\n    \"tslib\": \"^2.8.1\",\n    \"tsx\": \"^4.19.2\",\n    \"typescript\": \"^5.7.3\",\n    \"vitest\": \"^3.0.3\"\n  },\n  \"dependencies\": {\n    \"@types/blessed\": \"^0.1.25\",\n    \"blessed\": \"^0.1.81\",\n    \"commander\": \"^13.1.0\"\n  }\n}\n\n>>>> README.md\n# `askai` - AI-powered test debugger\n\nAI-powered test debugger that helps diagnose test failures using AI. It runs your tests and provides the results to an AI agent to analyze and suggest solutions.\n\nFor repo serialization, it uses [`yek`](https://github.com/bodo-run/yek) to serialize the repository.\n\n## Installation\n\n```bash\nnpm install -g askai\n```\n\n## Usage\n\nBasic usage:\n\n```bash\nexport DEEPSEEK_API_KEY=\"your-api-key\"\naskai npm test\n```\n\nWith debug mode:\n\n```bash\naskai --debug npm test\n```\n\n## Configuration\n\nSet these environment variables to customize behavior:\n\n| Variable           | Description      | Default |\n| ------------------ | ---------------- | ------- |\n| `DEEPSEEK_API_KEY` | Required API key | -       |\n\n## Examples\n\n### For JavaScript/Node.js\n\n```bash\naskai --serialize=\"yek --exclude 'node_modules'\" npm test\n```\n\n>>>> pnpm-lock.yaml\nlockfileVersion: '9.0'\n\nsettings:\n  autoInstallPeers: true\n  excludeLinksFromLockfile: false\n\nimporters:\n\n  .:\n    dependencies:\n      '@types/blessed':\n        specifier: ^0.1.25\n        version: 0.1.25\n      blessed:\n        specifier: ^0.1.81\n        version: 0.1.81\n      commander:\n        specifier: ^13.1.0\n        version: 13.1.0\n    devDependencies:\n      '@types/node':\n        specifier: ^22.10.7\n        version: 22.10.7\n      tslib:\n        specifier: ^2.8.1\n        version: 2.8.1\n      tsx:\n        specifier: ^4.19.2\n        version: 4.19.2\n      typescript:\n        specifier: ^5.7.3\n        version: 5.7.3\n      vitest:\n        specifier: ^3.0.3\n        version: 3.0.3(@types/node@22.10.7)(tsx@4.19.2)\n\npackages:\n\n  '@esbuild/aix-ppc64@0.23.1':\n    resolution: {integrity: sha512-6VhYk1diRqrhBAqpJEdjASR/+WVRtfjpqKuNw11cLiaWpAT/Uu+nokB+UJnevzy/P9C/ty6AOe0dwueMrGh/iQ==}\n    engines: {node: '>=18'}\n    cpu: [ppc64]\n    os: [aix]\n\n  '@esbuild/aix-ppc64@0.24.2':\n    resolution: {integrity: sha512-thpVCb/rhxE/BnMLQ7GReQLLN8q9qbHmI55F4489/ByVg2aQaQ6kbcLb6FHkocZzQhxc4gx0sCk0tJkKBFzDhA==}\n    engines: {node: '>=18'}\n    cpu: [ppc64]\n    os: [aix]\n\n  '@esbuild/android-arm64@0.23.1':\n    resolution: {integrity: sha512-xw50ipykXcLstLeWH7WRdQuysJqejuAGPd30vd1i5zSyKK3WE+ijzHmLKxdiCMtH1pHz78rOg0BKSYOSB/2Khw==}\n    engines: {node: '>=18'}\n    cpu: [arm64]\n    os: [android]\n\n  '@esbuild/android-arm64@0.24.2':\n    resolution: {integrity: sha512-cNLgeqCqV8WxfcTIOeL4OAtSmL8JjcN6m09XIgro1Wi7cF4t/THaWEa7eL5CMoMBdjoHOTh/vwTO/o2TRXIyzg==}\n    engines: {node: '>=18'}\n    cpu: [arm64]\n    os: [android]\n\n  '@esbuild/android-arm@0.23.1':\n    resolution: {integrity: sha512-uz6/tEy2IFm9RYOyvKl88zdzZfwEfKZmnX9Cj1BHjeSGNuGLuMD1kR8y5bteYmwqKm1tj8m4cb/aKEorr6fHWQ==}\n    engines: {node: '>=18'}\n    cpu: [arm]\n    os: [android]\n\n  '@esbuild/android-arm@0.24.2':\n    resolution: {integrity: sha512-tmwl4hJkCfNHwFB3nBa8z1Uy3ypZpxqxfTQOcHX+xRByyYgunVbZ9MzUUfb0RxaHIMnbHagwAxuTL+tnNM+1/Q==}\n    engines: {node: '>=18'}\n    cpu: [arm]\n    os: [android]\n\n  '@esbuild/android-x64@0.23.1':\n    resolution: {integrity: sha512-nlN9B69St9BwUoB+jkyU090bru8L0NA3yFvAd7k8dNsVH8bi9a8cUAUSEcEEgTp2z3dbEDGJGfP6VUnkQnlReg==}\n    engines: {node: '>=18'}\n    cpu: [x64]\n    os: [android]\n\n  '@esbuild/android-x64@0.24.2':\n    resolution: {integrity: sha512-B6Q0YQDqMx9D7rvIcsXfmJfvUYLoP722bgfBlO5cGvNVb5V/+Y7nhBE3mHV9OpxBf4eAS2S68KZztiPaWq4XYw==}\n    engines: {node: '>=18'}\n    cpu: [x64]\n    os: [android]\n\n  '@esbuild/darwin-arm64@0.23.1':\n    resolution: {integrity: sha512-YsS2e3Wtgnw7Wq53XXBLcV6JhRsEq8hkfg91ESVadIrzr9wO6jJDMZnCQbHm1Guc5t/CdDiFSSfWP58FNuvT3Q==}\n    engines: {node: '>=18'}\n    cpu: [arm64]\n    os: [darwin]\n\n  '@esbuild/darwin-arm64@0.24.2':\n    resolution: {integrity: sha512-kj3AnYWc+CekmZnS5IPu9D+HWtUI49hbnyqk0FLEJDbzCIQt7hg7ucF1SQAilhtYpIujfaHr6O0UHlzzSPdOeA==}\n    engines: {node: '>=18'}\n    cpu: [arm64]\n    os: [darwin]\n\n  '@esbuild/darwin-x64@0.23.1':\n    resolution: {integrity: sha512-aClqdgTDVPSEGgoCS8QDG37Gu8yc9lTHNAQlsztQ6ENetKEO//b8y31MMu2ZaPbn4kVsIABzVLXYLhCGekGDqw==}\n    engines: {node: '>=18'}\n    cpu: [x64]\n    os: [darwin]\n\n  '@esbuild/darwin-x64@0.24.2':\n    resolution: {integrity: sha512-WeSrmwwHaPkNR5H3yYfowhZcbriGqooyu3zI/3GGpF8AyUdsrrP0X6KumITGA9WOyiJavnGZUwPGvxvwfWPHIA==}\n    engines: {node: '>=18'}\n    cpu: [x64]\n    os: [darwin]\n\n  '@esbuild/freebsd-arm64@0.23.1':\n    resolution: {integrity: sha512-h1k6yS8/pN/NHlMl5+v4XPfikhJulk4G+tKGFIOwURBSFzE8bixw1ebjluLOjfwtLqY0kewfjLSrO6tN2MgIhA==}\n    engines: {node: '>=18'}\n    cpu: [arm64]\n    os: [freebsd]\n\n  '@esbuild/freebsd-arm64@0.24.2':\n    resolution: {integrity: sha512-UN8HXjtJ0k/Mj6a9+5u6+2eZ2ERD7Edt1Q9IZiB5UZAIdPnVKDoG7mdTVGhHJIeEml60JteamR3qhsr1r8gXvg==}\n    engines: {node: '>=18'}\n    cpu: [arm64]\n    os: [freebsd]\n\n  '@esbuild/freebsd-x64@0.23.1':\n    resolution: {integrity: sha512-lK1eJeyk1ZX8UklqFd/3A60UuZ/6UVfGT2LuGo3Wp4/z7eRTRYY+0xOu2kpClP+vMTi9wKOfXi2vjUpO1Ro76g==}\n    engines: {node: '>=18'}\n    cpu: [x64]\n    os: [freebsd]\n\n  '@esbuild/freebsd-x64@0.24.2':\n    resolution: {integrity: sha512-TvW7wE/89PYW+IevEJXZ5sF6gJRDY/14hyIGFXdIucxCsbRmLUcjseQu1SyTko+2idmCw94TgyaEZi9HUSOe3Q==}\n    engines: {node: '>=18'}\n    cpu: [x64]\n    os: [freebsd]\n\n  '@esbuild/linux-arm64@0.23.1':\n    resolution: {integrity: sha512-/93bf2yxencYDnItMYV/v116zff6UyTjo4EtEQjUBeGiVpMmffDNUyD9UN2zV+V3LRV3/on4xdZ26NKzn6754g==}\n    engines: {node: '>=18'}\n    cpu: [arm64]\n    os: [linux]\n\n  '@esbuild/linux-arm64@0.24.2':\n    resolution: {integrity: sha512-7HnAD6074BW43YvvUmE/35Id9/NB7BeX5EoNkK9obndmZBUk8xmJJeU7DwmUeN7tkysslb2eSl6CTrYz6oEMQg==}\n    engines: {node: '>=18'}\n    cpu: [arm64]\n    os: [linux]\n\n  '@esbuild/linux-arm@0.23.1':\n    resolution: {integrity: sha512-CXXkzgn+dXAPs3WBwE+Kvnrf4WECwBdfjfeYHpMeVxWE0EceB6vhWGShs6wi0IYEqMSIzdOF1XjQ/Mkm5d7ZdQ==}\n    engines: {node: '>=18'}\n    cpu: [arm]\n    os: [linux]\n\n  '@esbuild/linux-arm@0.24.2':\n    resolution: {integrity: sha512-n0WRM/gWIdU29J57hJyUdIsk0WarGd6To0s+Y+LwvlC55wt+GT/OgkwoXCXvIue1i1sSNWblHEig00GBWiJgfA==}\n    engines: {node: '>=18'}\n    cpu: [arm]\n    os: [linux]\n\n  '@esbuild/linux-ia32@0.23.1':\n    resolution: {integrity: sha512-VTN4EuOHwXEkXzX5nTvVY4s7E/Krz7COC8xkftbbKRYAl96vPiUssGkeMELQMOnLOJ8k3BY1+ZY52tttZnHcXQ==}\n    engines: {node: '>=18'}\n    cpu: [ia32]\n    os: [linux]\n\n  '@esbuild/linux-ia32@0.24.2':\n    resolution: {integrity: sha512-sfv0tGPQhcZOgTKO3oBE9xpHuUqguHvSo4jl+wjnKwFpapx+vUDcawbwPNuBIAYdRAvIDBfZVvXprIj3HA+Ugw==}\n    engines: {node: '>=18'}\n    cpu: [ia32]\n    os: [linux]\n\n  '@esbuild/linux-loong64@0.23.1':\n    resolution: {integrity: sha512-Vx09LzEoBa5zDnieH8LSMRToj7ir/Jeq0Gu6qJ/1GcBq9GkfoEAoXvLiW1U9J1qE/Y/Oyaq33w5p2ZWrNNHNEw==}\n    engines: {node: '>=18'}\n    cpu: [loong64]\n    os: [linux]\n\n  '@esbuild/linux-loong64@0.24.2':\n    resolution: {integrity: sha512-CN9AZr8kEndGooS35ntToZLTQLHEjtVB5n7dl8ZcTZMonJ7CCfStrYhrzF97eAecqVbVJ7APOEe18RPI4KLhwQ==}\n    engines: {node: '>=18'}\n    cpu: [loong64]\n    os: [linux]\n\n  '@esbuild/linux-mips64el@0.23.1':\n    resolution: {integrity: sha512-nrFzzMQ7W4WRLNUOU5dlWAqa6yVeI0P78WKGUo7lg2HShq/yx+UYkeNSE0SSfSure0SqgnsxPvmAUu/vu0E+3Q==}\n    engines: {node: '>=18'}\n    cpu: [mips64el]\n    os: [linux]\n\n  '@esbuild/linux-mips64el@0.24.2':\n    resolution: {integrity: sha512-iMkk7qr/wl3exJATwkISxI7kTcmHKE+BlymIAbHO8xanq/TjHaaVThFF6ipWzPHryoFsesNQJPE/3wFJw4+huw==}\n    engines: {node: '>=18'}\n    cpu: [mips64el]\n    os: [linux]\n\n  '@esbuild/linux-ppc64@0.23.1':\n    resolution: {integrity: sha512-dKN8fgVqd0vUIjxuJI6P/9SSSe/mB9rvA98CSH2sJnlZ/OCZWO1DJvxj8jvKTfYUdGfcq2dDxoKaC6bHuTlgcw==}\n    engines: {node: '>=18'}\n    cpu: [ppc64]\n    os: [linux]\n\n  '@esbuild/linux-ppc64@0.24.2':\n    resolution: {integrity: sha512-shsVrgCZ57Vr2L8mm39kO5PPIb+843FStGt7sGGoqiiWYconSxwTiuswC1VJZLCjNiMLAMh34jg4VSEQb+iEbw==}\n    engines: {node: '>=18'}\n    cpu: [ppc64]\n    os: [linux]\n\n  '@esbuild/linux-riscv64@0.23.1':\n    resolution: {integrity: sha512-5AV4Pzp80fhHL83JM6LoA6pTQVWgB1HovMBsLQ9OZWLDqVY8MVobBXNSmAJi//Csh6tcY7e7Lny2Hg1tElMjIA==}\n    engines: {node: '>=18'}\n    cpu: [riscv64]\n    os: [linux]\n\n  '@esbuild/linux-riscv64@0.24.2':\n    resolution: {integrity: sha512-4eSFWnU9Hhd68fW16GD0TINewo1L6dRrB+oLNNbYyMUAeOD2yCK5KXGK1GH4qD/kT+bTEXjsyTCiJGHPZ3eM9Q==}\n    engines: {node: '>=18'}\n    cpu: [riscv64]\n    os: [linux]\n\n  '@esbuild/linux-s390x@0.23.1':\n    resolution: {integrity: sha512-9ygs73tuFCe6f6m/Tb+9LtYxWR4c9yg7zjt2cYkjDbDpV/xVn+68cQxMXCjUpYwEkze2RcU/rMnfIXNRFmSoDw==}\n    engines: {node: '>=18'}\n    cpu: [s390x]\n    os: [linux]\n\n  '@esbuild/linux-s390x@0.24.2':\n    resolution: {integrity: sha512-S0Bh0A53b0YHL2XEXC20bHLuGMOhFDO6GN4b3YjRLK//Ep3ql3erpNcPlEFed93hsQAjAQDNsvcK+hV90FubSw==}\n    engines: {node: '>=18'}\n    cpu: [s390x]\n    os: [linux]\n\n  '@esbuild/linux-x64@0.23.1':\n    resolution: {integrity: sha512-EV6+ovTsEXCPAp58g2dD68LxoP/wK5pRvgy0J/HxPGB009omFPv3Yet0HiaqvrIrgPTBuC6wCH1LTOY91EO5hQ==}\n    engines: {node: '>=18'}\n    cpu: [x64]\n    os: [linux]\n\n  '@esbuild/linux-x64@0.24.2':\n    resolution: {integrity: sha512-8Qi4nQcCTbLnK9WoMjdC9NiTG6/E38RNICU6sUNqK0QFxCYgoARqVqxdFmWkdonVsvGqWhmm7MO0jyTqLqwj0Q==}\n    engines: {node: '>=18'}\n    cpu: [x64]\n    os: [linux]\n\n  '@esbuild/netbsd-arm64@0.24.2':\n    resolution: {integrity: sha512-wuLK/VztRRpMt9zyHSazyCVdCXlpHkKm34WUyinD2lzK07FAHTq0KQvZZlXikNWkDGoT6x3TD51jKQ7gMVpopw==}\n    engines: {node: '>=18'}\n    cpu: [arm64]\n    os: [netbsd]\n\n  '@esbuild/netbsd-x64@0.23.1':\n    resolution: {integrity: sha512-aevEkCNu7KlPRpYLjwmdcuNz6bDFiE7Z8XC4CPqExjTvrHugh28QzUXVOZtiYghciKUacNktqxdpymplil1beA==}\n    engines: {node: '>=18'}\n    cpu: [x64]\n    os: [netbsd]\n\n  '@esbuild/netbsd-x64@0.24.2':\n    resolution: {integrity: sha512-VefFaQUc4FMmJuAxmIHgUmfNiLXY438XrL4GDNV1Y1H/RW3qow68xTwjZKfj/+Plp9NANmzbH5R40Meudu8mmw==}\n    engines: {node: '>=18'}\n    cpu: [x64]\n    os: [netbsd]\n\n  '@esbuild/openbsd-arm64@0.23.1':\n    resolution: {integrity: sha512-3x37szhLexNA4bXhLrCC/LImN/YtWis6WXr1VESlfVtVeoFJBRINPJ3f0a/6LV8zpikqoUg4hyXw0sFBt5Cr+Q==}\n    engines: {node: '>=18'}\n    cpu: [arm64]\n    os: [openbsd]\n\n  '@esbuild/openbsd-arm64@0.24.2':\n    resolution: {integrity: sha512-YQbi46SBct6iKnszhSvdluqDmxCJA+Pu280Av9WICNwQmMxV7nLRHZfjQzwbPs3jeWnuAhE9Jy0NrnJ12Oz+0A==}\n    engines: {node: '>=18'}\n    cpu: [arm64]\n    os: [openbsd]\n\n  '@esbuild/openbsd-x64@0.23.1':\n    resolution: {integrity: sha512-aY2gMmKmPhxfU+0EdnN+XNtGbjfQgwZj43k8G3fyrDM/UdZww6xrWxmDkuz2eCZchqVeABjV5BpildOrUbBTqA==}\n    engines: {node: '>=18'}\n    cpu: [x64]\n    os: [openbsd]\n\n  '@esbuild/openbsd-x64@0.24.2':\n    resolution: {integrity: sha512-+iDS6zpNM6EnJyWv0bMGLWSWeXGN/HTaF/LXHXHwejGsVi+ooqDfMCCTerNFxEkM3wYVcExkeGXNqshc9iMaOA==}\n    engines: {node: '>=18'}\n    cpu: [x64]\n    os: [openbsd]\n\n  '@esbuild/sunos-x64@0.23.1':\n    resolution: {integrity: sha512-RBRT2gqEl0IKQABT4XTj78tpk9v7ehp+mazn2HbUeZl1YMdaGAQqhapjGTCe7uw7y0frDi4gS0uHzhvpFuI1sA==}\n    engines: {node: '>=18'}\n    cpu: [x64]\n    os: [sunos]\n\n  '@esbuild/sunos-x64@0.24.2':\n    resolution: {integrity: sha512-hTdsW27jcktEvpwNHJU4ZwWFGkz2zRJUz8pvddmXPtXDzVKTTINmlmga3ZzwcuMpUvLw7JkLy9QLKyGpD2Yxig==}\n    engines: {node: '>=18'}\n    cpu: [x64]\n    os: [sunos]\n\n  '@esbuild/win32-arm64@0.23.1':\n    resolution: {integrity: sha512-4O+gPR5rEBe2FpKOVyiJ7wNDPA8nGzDuJ6gN4okSA1gEOYZ67N8JPk58tkWtdtPeLz7lBnY6I5L3jdsr3S+A6A==}\n    engines: {node: '>=18'}\n    cpu: [arm64]\n    os: [win32]\n\n  '@esbuild/win32-arm64@0.24.2':\n    resolution: {integrity: sha512-LihEQ2BBKVFLOC9ZItT9iFprsE9tqjDjnbulhHoFxYQtQfai7qfluVODIYxt1PgdoyQkz23+01rzwNwYfutxUQ==}\n    engines: {node: '>=18'}\n    cpu: [arm64]\n    os: [win32]\n\n  '@esbuild/win32-ia32@0.23.1':\n    resolution: {integrity: sha512-BcaL0Vn6QwCwre3Y717nVHZbAa4UBEigzFm6VdsVdT/MbZ38xoj1X9HPkZhbmaBGUD1W8vxAfffbDe8bA6AKnQ==}\n    engines: {node: '>=18'}\n    cpu: [ia32]\n    os: [win32]\n\n  '@esbuild/win32-ia32@0.24.2':\n    resolution: {integrity: sha512-q+iGUwfs8tncmFC9pcnD5IvRHAzmbwQ3GPS5/ceCyHdjXubwQWI12MKWSNSMYLJMq23/IUCvJMS76PDqXe1fxA==}\n    engines: {node: '>=18'}\n    cpu: [ia32]\n    os: [win32]\n\n  '@esbuild/win32-x64@0.23.1':\n    resolution: {integrity: sha512-BHpFFeslkWrXWyUPnbKm+xYYVYruCinGcftSBaa8zoF9hZO4BcSCFUvHVTtzpIY6YzUnYtuEhZ+C9iEXjxnasg==}\n    engines: {node: '>=18'}\n    cpu: [x64]\n    os: [win32]\n\n  '@esbuild/win32-x64@0.24.2':\n    resolution: {integrity: sha512-7VTgWzgMGvup6aSqDPLiW5zHaxYJGTO4OokMjIlrCtf+VpEL+cXKtCvg723iguPYI5oaUNdS+/V7OU2gvXVWEg==}\n    engines: {node: '>=18'}\n    cpu: [x64]\n    os: [win32]\n\n  '@jridgewell/sourcemap-codec@1.5.0':\n    resolution: {integrity: sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==}\n\n  '@rollup/rollup-android-arm-eabi@4.31.0':\n    resolution: {integrity: sha512-9NrR4033uCbUBRgvLcBrJofa2KY9DzxL2UKZ1/4xA/mnTNyhZCWBuD8X3tPm1n4KxcgaraOYgrFKSgwjASfmlA==}\n    cpu: [arm]\n    os: [android]\n\n  '@rollup/rollup-android-arm64@4.31.0':\n    resolution: {integrity: sha512-iBbODqT86YBFHajxxF8ebj2hwKm1k8PTBQSojSt3d1FFt1gN+xf4CowE47iN0vOSdnd+5ierMHBbu/rHc7nq5g==}\n    cpu: [arm64]\n    os: [android]\n\n  '@rollup/rollup-darwin-arm64@4.31.0':\n    resolution: {integrity: sha512-WHIZfXgVBX30SWuTMhlHPXTyN20AXrLH4TEeH/D0Bolvx9PjgZnn4H677PlSGvU6MKNsjCQJYczkpvBbrBnG6g==}\n    cpu: [arm64]\n    os: [darwin]\n\n  '@rollup/rollup-darwin-x64@4.31.0':\n    resolution: {integrity: sha512-hrWL7uQacTEF8gdrQAqcDy9xllQ0w0zuL1wk1HV8wKGSGbKPVjVUv/DEwT2+Asabf8Dh/As+IvfdU+H8hhzrQQ==}\n    cpu: [x64]\n    os: [darwin]\n\n  '@rollup/rollup-freebsd-arm64@4.31.0':\n    resolution: {integrity: sha512-S2oCsZ4hJviG1QjPY1h6sVJLBI6ekBeAEssYKad1soRFv3SocsQCzX6cwnk6fID6UQQACTjeIMB+hyYrFacRew==}\n    cpu: [arm64]\n    os: [freebsd]\n\n  '@rollup/rollup-freebsd-x64@4.31.0':\n    resolution: {integrity: sha512-pCANqpynRS4Jirn4IKZH4tnm2+2CqCNLKD7gAdEjzdLGbH1iO0zouHz4mxqg0uEMpO030ejJ0aA6e1PJo2xrPA==}\n    cpu: [x64]\n    os: [freebsd]\n\n  '@rollup/rollup-linux-arm-gnueabihf@4.31.0':\n    resolution: {integrity: sha512-0O8ViX+QcBd3ZmGlcFTnYXZKGbFu09EhgD27tgTdGnkcYXLat4KIsBBQeKLR2xZDCXdIBAlWLkiXE1+rJpCxFw==}\n    cpu: [arm]\n    os: [linux]\n\n  '@rollup/rollup-linux-arm-musleabihf@4.31.0':\n    resolution: {integrity: sha512-w5IzG0wTVv7B0/SwDnMYmbr2uERQp999q8FMkKG1I+j8hpPX2BYFjWe69xbhbP6J9h2gId/7ogesl9hwblFwwg==}\n    cpu: [arm]\n    os: [linux]\n\n  '@rollup/rollup-linux-arm64-gnu@4.31.0':\n    resolution: {integrity: sha512-JyFFshbN5xwy6fulZ8B/8qOqENRmDdEkcIMF0Zz+RsfamEW+Zabl5jAb0IozP/8UKnJ7g2FtZZPEUIAlUSX8cA==}\n    cpu: [arm64]\n    os: [linux]\n\n  '@rollup/rollup-linux-arm64-musl@4.31.0':\n    resolution: {integrity: sha512-kpQXQ0UPFeMPmPYksiBL9WS/BDiQEjRGMfklVIsA0Sng347H8W2iexch+IEwaR7OVSKtr2ZFxggt11zVIlZ25g==}\n    cpu: [arm64]\n    os: [linux]\n\n  '@rollup/rollup-linux-loongarch64-gnu@4.31.0':\n    resolution: {integrity: sha512-pMlxLjt60iQTzt9iBb3jZphFIl55a70wexvo8p+vVFK+7ifTRookdoXX3bOsRdmfD+OKnMozKO6XM4zR0sHRrQ==}\n    cpu: [loong64]\n    os: [linux]\n\n  '@rollup/rollup-linux-powerpc64le-gnu@4.31.0':\n    resolution: {integrity: sha512-D7TXT7I/uKEuWiRkEFbed1UUYZwcJDU4vZQdPTcepK7ecPhzKOYk4Er2YR4uHKme4qDeIh6N3XrLfpuM7vzRWQ==}\n    cpu: [ppc64]\n    os: [linux]\n\n  '@rollup/rollup-linux-riscv64-gnu@4.31.0':\n    resolution: {integrity: sha512-wal2Tc8O5lMBtoePLBYRKj2CImUCJ4UNGJlLwspx7QApYny7K1cUYlzQ/4IGQBLmm+y0RS7dwc3TDO/pmcneTw==}\n    cpu: [riscv64]\n    os: [linux]\n\n  '@rollup/rollup-linux-s390x-gnu@4.31.0':\n    resolution: {integrity: sha512-O1o5EUI0+RRMkK9wiTVpk2tyzXdXefHtRTIjBbmFREmNMy7pFeYXCFGbhKFwISA3UOExlo5GGUuuj3oMKdK6JQ==}\n    cpu: [s390x]\n    os: [linux]\n\n  '@rollup/rollup-linux-x64-gnu@4.31.0':\n    resolution: {integrity: sha512-zSoHl356vKnNxwOWnLd60ixHNPRBglxpv2g7q0Cd3Pmr561gf0HiAcUBRL3S1vPqRC17Zo2CX/9cPkqTIiai1g==}\n    cpu: [x64]\n    os: [linux]\n\n  '@rollup/rollup-linux-x64-musl@4.31.0':\n    resolution: {integrity: sha512-ypB/HMtcSGhKUQNiFwqgdclWNRrAYDH8iMYH4etw/ZlGwiTVxBz2tDrGRrPlfZu6QjXwtd+C3Zib5pFqID97ZA==}\n    cpu: [x64]\n    os: [linux]\n\n  '@rollup/rollup-win32-arm64-msvc@4.31.0':\n    resolution: {integrity: sha512-JuhN2xdI/m8Hr+aVO3vspO7OQfUFO6bKLIRTAy0U15vmWjnZDLrEgCZ2s6+scAYaQVpYSh9tZtRijApw9IXyMw==}\n    cpu: [arm64]\n    os: [win32]\n\n  '@rollup/rollup-win32-ia32-msvc@4.31.0':\n    resolution: {integrity: sha512-U1xZZXYkvdf5MIWmftU8wrM5PPXzyaY1nGCI4KI4BFfoZxHamsIe+BtnPLIvvPykvQWlVbqUXdLa4aJUuilwLQ==}\n    cpu: [ia32]\n    os: [win32]\n\n  '@rollup/rollup-win32-x64-msvc@4.31.0':\n    resolution: {integrity: sha512-ul8rnCsUumNln5YWwz0ted2ZHFhzhRRnkpBZ+YRuHoRAlUji9KChpOUOndY7uykrPEPXVbHLlsdo6v5yXo/TXw==}\n    cpu: [x64]\n    os: [win32]\n\n  '@types/blessed@0.1.25':\n    resolution: {integrity: sha512-kQsjBgtsbJLmG6CJA+Z6Nujj+tq1fcSE3UIowbDvzQI4wWmoTV7djUDhSo5lDjgwpIN0oRvks0SA5mMdKE5eFg==}\n\n  '@types/estree@1.0.6':\n    resolution: {integrity: sha512-AYnb1nQyY49te+VRAVgmzfcgjYS91mY5P0TKUDCLEM+gNnA+3T6rWITXRLYCpahpqSQbN5cE+gHpnPyXjHWxcw==}\n\n  '@types/node@22.10.7':\n    resolution: {integrity: sha512-V09KvXxFiutGp6B7XkpaDXlNadZxrzajcY50EuoLIpQ6WWYCSvf19lVIazzfIzQvhUN2HjX12spLojTnhuKlGg==}\n\n  '@vitest/expect@3.0.3':\n    resolution: {integrity: sha512-SbRCHU4qr91xguu+dH3RUdI5dC86zm8aZWydbp961aIR7G8OYNN6ZiayFuf9WAngRbFOfdrLHCGgXTj3GtoMRQ==}\n\n  '@vitest/mocker@3.0.3':\n    resolution: {integrity: sha512-XT2XBc4AN9UdaxJAeIlcSZ0ILi/GzmG5G8XSly4gaiqIvPV3HMTSIDZWJVX6QRJ0PX1m+W8Cy0K9ByXNb/bPIA==}\n    peerDependencies:\n      msw: ^2.4.9\n      vite: ^5.0.0 || ^6.0.0\n    peerDependenciesMeta:\n      msw:\n        optional: true\n      vite:\n        optional: true\n\n  '@vitest/pretty-format@3.0.3':\n    resolution: {integrity: sha512-gCrM9F7STYdsDoNjGgYXKPq4SkSxwwIU5nkaQvdUxiQ0EcNlez+PdKOVIsUJvh9P9IeIFmjn4IIREWblOBpP2Q==}\n\n  '@vitest/runner@3.0.3':\n    resolution: {integrity: sha512-Rgi2kOAk5ZxWZlwPguRJFOBmWs6uvvyAAR9k3MvjRvYrG7xYvKChZcmnnpJCS98311CBDMqsW9MzzRFsj2gX3g==}\n\n  '@vitest/snapshot@3.0.3':\n    resolution: {integrity: sha512-kNRcHlI4txBGztuJfPEJ68VezlPAXLRT1u5UCx219TU3kOG2DplNxhWLwDf2h6emwmTPogzLnGVwP6epDaJN6Q==}\n\n  '@vitest/spy@3.0.3':\n    resolution: {integrity: sha512-7/dgux8ZBbF7lEIKNnEqQlyRaER9nkAL9eTmdKJkDO3hS8p59ATGwKOCUDHcBLKr7h/oi/6hP+7djQk8049T2A==}\n\n  '@vitest/utils@3.0.3':\n    resolution: {integrity: sha512-f+s8CvyzPtMFY1eZKkIHGhPsQgYo5qCm6O8KZoim9qm1/jT64qBgGpO5tHscNH6BzRHM+edLNOP+3vO8+8pE/A==}\n\n  assertion-error@2.0.1:\n    resolution: {integrity: sha512-Izi8RQcffqCeNVgFigKli1ssklIbpHnCYc6AknXGYoB6grJqyeby7jv12JUQgmTAnIDnbck1uxksT4dzN3PWBA==}\n    engines: {node: '>=12'}\n\n  blessed@0.1.81:\n    resolution: {integrity: sha512-LoF5gae+hlmfORcG1M5+5XZi4LBmvlXTzwJWzUlPryN/SJdSflZvROM2TwkT0GMpq7oqT48NRd4GS7BiVBc5OQ==}\n    engines: {node: '>= 0.8.0'}\n    hasBin: true\n\n  cac@6.7.14:\n    resolution: {integrity: sha512-b6Ilus+c3RrdDk+JhLKUAQfzzgLEPy6wcXqS7f/xe1EETvsDP6GORG7SFuOs6cID5YkqchW/LXZbX5bc8j7ZcQ==}\n    engines: {node: '>=8'}\n\n  chai@5.1.2:\n    resolution: {integrity: sha512-aGtmf24DW6MLHHG5gCx4zaI3uBq3KRtxeVs0DjFH6Z0rDNbsvTxFASFvdj79pxjxZ8/5u3PIiN3IwEIQkiiuPw==}\n    engines: {node: '>=12'}\n\n  check-error@2.1.1:\n    resolution: {integrity: sha512-OAlb+T7V4Op9OwdkjmguYRqncdlx5JiofwOAUkmTF+jNdHwzTaTs4sRAGpzLF3oOz5xAyDGrPgeIDFQmDOTiJw==}\n    engines: {node: '>= 16'}\n\n  commander@13.1.0:\n    resolution: {integrity: sha512-/rFeCpNJQbhSZjGVwO9RFV3xPqbnERS8MmIQzCtD/zl6gpJuV/bMLuN92oG3F7d8oDEHHRrujSXNUr8fpjntKw==}\n    engines: {node: '>=18'}\n\n  debug@4.4.0:\n    resolution: {integrity: sha512-6WTZ/IxCY/T6BALoZHaE4ctp9xm+Z5kY/pzYaCHRFeyVhojxlrm+46y68HA6hr0TcwEssoxNiDEUJQjfPZ/RYA==}\n    engines: {node: '>=6.0'}\n    peerDependencies:\n      supports-color: '*'\n    peerDependenciesMeta:\n      supports-color:\n        optional: true\n\n  deep-eql@5.0.2:\n    resolution: {integrity: sha512-h5k/5U50IJJFpzfL6nO9jaaumfjO/f2NjK/oYB2Djzm4p9L+3T9qWpZqZ2hAbLPuuYq9wrU08WQyBTL5GbPk5Q==}\n    engines: {node: '>=6'}\n\n  es-module-lexer@1.6.0:\n    resolution: {integrity: sha512-qqnD1yMU6tk/jnaMosogGySTZP8YtUgAffA9nMN+E/rjxcfRQ6IEk7IiozUjgxKoFHBGjTLnrHB/YC45r/59EQ==}\n\n  esbuild@0.23.1:\n    resolution: {integrity: sha512-VVNz/9Sa0bs5SELtn3f7qhJCDPCF5oMEl5cO9/SSinpE9hbPVvxbd572HH5AKiP7WD8INO53GgfDDhRjkylHEg==}\n    engines: {node: '>=18'}\n    hasBin: true\n\n  esbuild@0.24.2:\n    resolution: {integrity: sha512-+9egpBW8I3CD5XPe0n6BfT5fxLzxrlDzqydF3aviG+9ni1lDC/OvMHcxqEFV0+LANZG5R1bFMWfUrjVsdwxJvA==}\n    engines: {node: '>=18'}\n    hasBin: true\n\n  estree-walker@3.0.3:\n    resolution: {integrity: sha512-7RUKfXgSMMkzt6ZuXmqapOurLGPPfgj6l9uRZ7lRGolvk0y2yocc35LdcxKC5PQZdn2DMqioAQ2NoWcrTKmm6g==}\n\n  expect-type@1.1.0:\n    resolution: {integrity: sha512-bFi65yM+xZgk+u/KRIpekdSYkTB5W1pEf0Lt8Q8Msh7b+eQ7LXVtIB1Bkm4fvclDEL1b2CZkMhv2mOeF8tMdkA==}\n    engines: {node: '>=12.0.0'}\n\n  fsevents@2.3.3:\n    resolution: {integrity: sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==}\n    engines: {node: ^8.16.0 || ^10.6.0 || >=11.0.0}\n    os: [darwin]\n\n  get-tsconfig@4.10.0:\n    resolution: {integrity: sha512-kGzZ3LWWQcGIAmg6iWvXn0ei6WDtV26wzHRMwDSzmAbcXrTEXxHy6IehI6/4eT6VRKyMP1eF1VqwrVUmE/LR7A==}\n\n  loupe@3.1.2:\n    resolution: {integrity: sha512-23I4pFZHmAemUnz8WZXbYRSKYj801VDaNv9ETuMh7IrMc7VuVVSo+Z9iLE3ni30+U48iDWfi30d3twAXBYmnCg==}\n\n  magic-string@0.30.17:\n    resolution: {integrity: sha512-sNPKHvyjVf7gyjwS4xGTaW/mCnF8wnjtifKBEhxfZ7E/S8tQ0rssrwGNn6q8JH/ohItJfSQp9mBtQYuTlH5QnA==}\n\n  ms@2.1.3:\n    resolution: {integrity: sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==}\n\n  nanoid@3.3.8:\n    resolution: {integrity: sha512-WNLf5Sd8oZxOm+TzppcYk8gVOgP+l58xNy58D0nbUnOxOWRWvlcCV4kUF7ltmI6PsrLl/BgKEyS4mqsGChFN0w==}\n    engines: {node: ^10 || ^12 || ^13.7 || ^14 || >=15.0.1}\n    hasBin: true\n\n  pathe@2.0.2:\n    resolution: {integrity: sha512-15Ztpk+nov8DR524R4BF7uEuzESgzUEAV4Ah7CUMNGXdE5ELuvxElxGXndBl32vMSsWa1jpNf22Z+Er3sKwq+w==}\n\n  pathval@2.0.0:\n    resolution: {integrity: sha512-vE7JKRyES09KiunauX7nd2Q9/L7lhok4smP9RZTDeD4MVs72Dp2qNFVz39Nz5a0FVEW0BJR6C0DYrq6unoziZA==}\n    engines: {node: '>= 14.16'}\n\n  picocolors@1.1.1:\n    resolution: {integrity: sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==}\n\n  postcss@8.5.1:\n    resolution: {integrity: sha512-6oz2beyjc5VMn/KV1pPw8fliQkhBXrVn1Z3TVyqZxU8kZpzEKhBdmCFqI6ZbmGtamQvQGuU1sgPTk8ZrXDD7jQ==}\n    engines: {node: ^10 || ^12 || >=14}\n\n  resolve-pkg-maps@1.0.0:\n    resolution: {integrity: sha512-seS2Tj26TBVOC2NIc2rOe2y2ZO7efxITtLZcGSOnHHNOQ7CkiUBfw0Iw2ck6xkIhPwLhKNLS8BO+hEpngQlqzw==}\n\n  rollup@4.31.0:\n    resolution: {integrity: sha512-9cCE8P4rZLx9+PjoyqHLs31V9a9Vpvfo4qNcs6JCiGWYhw2gijSetFbH6SSy1whnkgcefnUwr8sad7tgqsGvnw==}\n    engines: {node: '>=18.0.0', npm: '>=8.0.0'}\n    hasBin: true\n\n  siginfo@2.0.0:\n    resolution: {integrity: sha512-ybx0WO1/8bSBLEWXZvEd7gMW3Sn3JFlW3TvX1nREbDLRNQNaeNN8WK0meBwPdAaOI7TtRRRJn/Es1zhrrCHu7g==}\n\n  source-map-js@1.2.1:\n    resolution: {integrity: sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==}\n    engines: {node: '>=0.10.0'}\n\n  stackback@0.0.2:\n    resolution: {integrity: sha512-1XMJE5fQo1jGH6Y/7ebnwPOBEkIEnT4QF32d5R1+VXdXveM0IBMJt8zfaxX1P3QhVwrYe+576+jkANtSS2mBbw==}\n\n  std-env@3.8.0:\n    resolution: {integrity: sha512-Bc3YwwCB+OzldMxOXJIIvC6cPRWr/LxOp48CdQTOkPyk/t4JWWJbrilwBd7RJzKV8QW7tJkcgAmeuLLJugl5/w==}\n\n  tinybench@2.9.0:\n    resolution: {integrity: sha512-0+DUvqWMValLmha6lr4kD8iAMK1HzV0/aKnCtWb9v9641TnP/MFb7Pc2bxoxQjTXAErryXVgUOfv2YqNllqGeg==}\n\n  tinyexec@0.3.2:\n    resolution: {integrity: sha512-KQQR9yN7R5+OSwaK0XQoj22pwHoTlgYqmUscPYoknOoWCWfj/5/ABTMRi69FrKU5ffPVh5QcFikpWJI/P1ocHA==}\n\n  tinypool@1.0.2:\n    resolution: {integrity: sha512-al6n+QEANGFOMf/dmUMsuS5/r9B06uwlyNjZZql/zv8J7ybHCgoihBNORZCY2mzUuAnomQa2JdhyHKzZxPCrFA==}\n    engines: {node: ^18.0.0 || >=20.0.0}\n\n  tinyrainbow@2.0.0:\n    resolution: {integrity: sha512-op4nsTR47R6p0vMUUoYl/a+ljLFVtlfaXkLQmqfLR1qHma1h/ysYk4hEXZ880bf2CYgTskvTa/e196Vd5dDQXw==}\n    engines: {node: '>=14.0.0'}\n\n  tinyspy@3.0.2:\n    resolution: {integrity: sha512-n1cw8k1k0x4pgA2+9XrOkFydTerNcJ1zWCO5Nn9scWHTD+5tp8dghT2x1uduQePZTZgd3Tupf+x9BxJjeJi77Q==}\n    engines: {node: '>=14.0.0'}\n\n  tslib@2.8.1:\n    resolution: {integrity: sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==}\n\n  tsx@4.19.2:\n    resolution: {integrity: sha512-pOUl6Vo2LUq/bSa8S5q7b91cgNSjctn9ugq/+Mvow99qW6x/UZYwzxy/3NmqoT66eHYfCVvFvACC58UBPFf28g==}\n    engines: {node: '>=18.0.0'}\n    hasBin: true\n\n  typescript@5.7.3:\n    resolution: {integrity: sha512-84MVSjMEHP+FQRPy3pX9sTVV/INIex71s9TL2Gm5FG/WG1SqXeKyZ0k7/blY/4FdOzI12CBy1vGc4og/eus0fw==}\n    engines: {node: '>=14.17'}\n    hasBin: true\n\n  undici-types@6.20.0:\n    resolution: {integrity: sha512-Ny6QZ2Nju20vw1SRHe3d9jVu6gJ+4e3+MMpqu7pqE5HT6WsTSlce++GQmK5UXS8mzV8DSYHrQH+Xrf2jVcuKNg==}\n\n  vite-node@3.0.3:\n    resolution: {integrity: sha512-0sQcwhwAEw/UJGojbhOrnq3HtiZ3tC7BzpAa0lx3QaTX0S3YX70iGcik25UBdB96pmdwjyY2uyKNYruxCDmiEg==}\n    engines: {node: ^18.0.0 || ^20.0.0 || >=22.0.0}\n    hasBin: true\n\n  vite@6.0.11:\n    resolution: {integrity: sha512-4VL9mQPKoHy4+FE0NnRE/kbY51TOfaknxAjt3fJbGJxhIpBZiqVzlZDEesWWsuREXHwNdAoOFZ9MkPEVXczHwg==}\n    engines: {node: ^18.0.0 || ^20.0.0 || >=22.0.0}\n    hasBin: true\n    peerDependencies:\n      '@types/node': ^18.0.0 || ^20.0.0 || >=22.0.0\n      jiti: '>=1.21.0'\n      less: '*'\n      lightningcss: ^1.21.0\n      sass: '*'\n      sass-embedded: '*'\n      stylus: '*'\n      sugarss: '*'\n      terser: ^5.16.0\n      tsx: ^4.8.1\n      yaml: ^2.4.2\n    peerDependenciesMeta:\n      '@types/node':\n        optional: true\n      jiti:\n        optional: true\n      less:\n        optional: true\n      lightningcss:\n        optional: true\n      sass:\n        optional: true\n      sass-embedded:\n        optional: true\n      stylus:\n        optional: true\n      sugarss:\n        optional: true\n      terser:\n        optional: true\n      tsx:\n        optional: true\n      yaml:\n        optional: true\n\n  vitest@3.0.3:\n    resolution: {integrity: sha512-dWdwTFUW9rcnL0LyF2F+IfvNQWB0w9DERySCk8VMG75F8k25C7LsZoh6XfCjPvcR8Nb+Lqi9JKr6vnzH7HSrpQ==}\n    engines: {node: ^18.0.0 || ^20.0.0 || >=22.0.0}\n    hasBin: true\n    peerDependencies:\n      '@edge-runtime/vm': '*'\n      '@types/node': ^18.0.0 || ^20.0.0 || >=22.0.0\n      '@vitest/browser': 3.0.3\n      '@vitest/ui': 3.0.3\n      happy-dom: '*'\n      jsdom: '*'\n    peerDependenciesMeta:\n      '@edge-runtime/vm':\n        optional: true\n      '@types/node':\n        optional: true\n      '@vitest/browser':\n        optional: true\n      '@vitest/ui':\n        optional: true\n      happy-dom:\n        optional: true\n      jsdom:\n        optional: true\n\n  why-is-node-running@2.3.0:\n    resolution: {integrity: sha512-hUrmaWBdVDcxvYqnyh09zunKzROWjbZTiNy8dBEjkS7ehEDQibXJ7XvlmtbwuTclUiIyN+CyXQD4Vmko8fNm8w==}\n    engines: {node: '>=8'}\n    hasBin: true\n\nsnapshots:\n\n  '@esbuild/aix-ppc64@0.23.1':\n    optional: true\n\n  '@esbuild/aix-ppc64@0.24.2':\n    optional: true\n\n  '@esbuild/android-arm64@0.23.1':\n    optional: true\n\n  '@esbuild/android-arm64@0.24.2':\n    optional: true\n\n  '@esbuild/android-arm@0.23.1':\n    optional: true\n\n  '@esbuild/android-arm@0.24.2':\n    optional: true\n\n  '@esbuild/android-x64@0.23.1':\n    optional: true\n\n  '@esbuild/android-x64@0.24.2':\n    optional: true\n\n  '@esbuild/darwin-arm64@0.23.1':\n    optional: true\n\n  '@esbuild/darwin-arm64@0.24.2':\n    optional: true\n\n  '@esbuild/darwin-x64@0.23.1':\n    optional: true\n\n  '@esbuild/darwin-x64@0.24.2':\n    optional: true\n\n  '@esbuild/freebsd-arm64@0.23.1':\n    optional: true\n\n  '@esbuild/freebsd-arm64@0.24.2':\n    optional: true\n\n  '@esbuild/freebsd-x64@0.23.1':\n    optional: true\n\n  '@esbuild/freebsd-x64@0.24.2':\n    optional: true\n\n  '@esbuild/linux-arm64@0.23.1':\n    optional: true\n\n  '@esbuild/linux-arm64@0.24.2':\n    optional: true\n\n  '@esbuild/linux-arm@0.23.1':\n    optional: true\n\n  '@esbuild/linux-arm@0.24.2':\n    optional: true\n\n  '@esbuild/linux-ia32@0.23.1':\n    optional: true\n\n  '@esbuild/linux-ia32@0.24.2':\n    optional: true\n\n  '@esbuild/linux-loong64@0.23.1':\n    optional: true\n\n  '@esbuild/linux-loong64@0.24.2':\n    optional: true\n\n  '@esbuild/linux-mips64el@0.23.1':\n    optional: true\n\n  '@esbuild/linux-mips64el@0.24.2':\n    optional: true\n\n  '@esbuild/linux-ppc64@0.23.1':\n    optional: true\n\n  '@esbuild/linux-ppc64@0.24.2':\n    optional: true\n\n  '@esbuild/linux-riscv64@0.23.1':\n    optional: true\n\n  '@esbuild/linux-riscv64@0.24.2':\n    optional: true\n\n  '@esbuild/linux-s390x@0.23.1':\n    optional: true\n\n  '@esbuild/linux-s390x@0.24.2':\n    optional: true\n\n  '@esbuild/linux-x64@0.23.1':\n    optional: true\n\n  '@esbuild/linux-x64@0.24.2':\n    optional: true\n\n  '@esbuild/netbsd-arm64@0.24.2':\n    optional: true\n\n  '@esbuild/netbsd-x64@0.23.1':\n    optional: true\n\n  '@esbuild/netbsd-x64@0.24.2':\n    optional: true\n\n  '@esbuild/openbsd-arm64@0.23.1':\n    optional: true\n\n  '@esbuild/openbsd-arm64@0.24.2':\n    optional: true\n\n  '@esbuild/openbsd-x64@0.23.1':\n    optional: true\n\n  '@esbuild/openbsd-x64@0.24.2':\n    optional: true\n\n  '@esbuild/sunos-x64@0.23.1':\n    optional: true\n\n  '@esbuild/sunos-x64@0.24.2':\n    optional: true\n\n  '@esbuild/win32-arm64@0.23.1':\n    optional: true\n\n  '@esbuild/win32-arm64@0.24.2':\n    optional: true\n\n  '@esbuild/win32-ia32@0.23.1':\n    optional: true\n\n  '@esbuild/win32-ia32@0.24.2':\n    optional: true\n\n  '@esbuild/win32-x64@0.23.1':\n    optional: true\n\n  '@esbuild/win32-x64@0.24.2':\n    optional: true\n\n  '@jridgewell/sourcemap-codec@1.5.0': {}\n\n  '@rollup/rollup-android-arm-eabi@4.31.0':\n    optional: true\n\n  '@rollup/rollup-android-arm64@4.31.0':\n    optional: true\n\n  '@rollup/rollup-darwin-arm64@4.31.0':\n    optional: true\n\n  '@rollup/rollup-darwin-x64@4.31.0':\n    optional: true\n\n  '@rollup/rollup-freebsd-arm64@4.31.0':\n    optional: true\n\n  '@rollup/rollup-freebsd-x64@4.31.0':\n    optional: true\n\n  '@rollup/rollup-linux-arm-gnueabihf@4.31.0':\n    optional: true\n\n  '@rollup/rollup-linux-arm-musleabihf@4.31.0':\n    optional: true\n\n  '@rollup/rollup-linux-arm64-gnu@4.31.0':\n    optional: true\n\n  '@rollup/rollup-linux-arm64-musl@4.31.0':\n    optional: true\n\n  '@rollup/rollup-linux-loongarch64-gnu@4.31.0':\n    optional: true\n\n  '@rollup/rollup-linux-powerpc64le-gnu@4.31.0':\n    optional: true\n\n  '@rollup/rollup-linux-riscv64-gnu@4.31.0':\n    optional: true\n\n  '@rollup/rollup-linux-s390x-gnu@4.31.0':\n    optional: true\n\n  '@rollup/rollup-linux-x64-gnu@4.31.0':\n    optional: true\n\n  '@rollup/rollup-linux-x64-musl@4.31.0':\n    optional: true\n\n  '@rollup/rollup-win32-arm64-msvc@4.31.0':\n    optional: true\n\n  '@rollup/rollup-win32-ia32-msvc@4.31.0':\n    optional: true\n\n  '@rollup/rollup-win32-x64-msvc@4.31.0':\n    optional: true\n\n  '@types/blessed@0.1.25':\n    dependencies:\n      '@types/node': 22.10.7\n\n  '@types/estree@1.0.6': {}\n\n  '@types/node@22.10.7':\n    dependencies:\n      undici-types: 6.20.0\n\n  '@vitest/expect@3.0.3':\n    dependencies:\n      '@vitest/spy': 3.0.3\n      '@vitest/utils': 3.0.3\n      chai: 5.1.2\n      tinyrainbow: 2.0.0\n\n  '@vitest/mocker@3.0.3(vite@6.0.11(@types/node@22.10.7)(tsx@4.19.2))':\n    dependencies:\n      '@vitest/spy': 3.0.3\n      estree-walker: 3.0.3\n      magic-string: 0.30.17\n    optionalDependencies:\n      vite: 6.0.11(@types/node@22.10.7)(tsx@4.19.2)\n\n  '@vitest/pretty-format@3.0.3':\n    dependencies:\n      tinyrainbow: 2.0.0\n\n  '@vitest/runner@3.0.3':\n    dependencies:\n      '@vitest/utils': 3.0.3\n      pathe: 2.0.2\n\n  '@vitest/snapshot@3.0.3':\n    dependencies:\n      '@vitest/pretty-format': 3.0.3\n      magic-string: 0.30.17\n      pathe: 2.0.2\n\n  '@vitest/spy@3.0.3':\n    dependencies:\n      tinyspy: 3.0.2\n\n  '@vitest/utils@3.0.3':\n    dependencies:\n      '@vitest/pretty-format': 3.0.3\n      loupe: 3.1.2\n      tinyrainbow: 2.0.0\n\n  assertion-error@2.0.1: {}\n\n  blessed@0.1.81: {}\n\n  cac@6.7.14: {}\n\n  chai@5.1.2:\n    dependencies:\n      assertion-error: 2.0.1\n      check-error: 2.1.1\n      deep-eql: 5.0.2\n      loupe: 3.1.2\n      pathval: 2.0.0\n\n  check-error@2.1.1: {}\n\n  commander@13.1.0: {}\n\n  debug@4.4.0:\n    dependencies:\n      ms: 2.1.3\n\n  deep-eql@5.0.2: {}\n\n  es-module-lexer@1.6.0: {}\n\n  esbuild@0.23.1:\n    optionalDependencies:\n      '@esbuild/aix-ppc64': 0.23.1\n      '@esbuild/android-arm': 0.23.1\n      '@esbuild/android-arm64': 0.23.1\n      '@esbuild/android-x64': 0.23.1\n      '@esbuild/darwin-arm64': 0.23.1\n      '@esbuild/darwin-x64': 0.23.1\n      '@esbuild/freebsd-arm64': 0.23.1\n      '@esbuild/freebsd-x64': 0.23.1\n      '@esbuild/linux-arm': 0.23.1\n      '@esbuild/linux-arm64': 0.23.1\n      '@esbuild/linux-ia32': 0.23.1\n      '@esbuild/linux-loong64': 0.23.1\n      '@esbuild/linux-mips64el': 0.23.1\n      '@esbuild/linux-ppc64': 0.23.1\n      '@esbuild/linux-riscv64': 0.23.1\n      '@esbuild/linux-s390x': 0.23.1\n      '@esbuild/linux-x64': 0.23.1\n      '@esbuild/netbsd-x64': 0.23.1\n      '@esbuild/openbsd-arm64': 0.23.1\n      '@esbuild/openbsd-x64': 0.23.1\n      '@esbuild/sunos-x64': 0.23.1\n      '@esbuild/win32-arm64': 0.23.1\n      '@esbuild/win32-ia32': 0.23.1\n      '@esbuild/win32-x64': 0.23.1\n\n  esbuild@0.24.2:\n    optionalDependencies:\n      '@esbuild/aix-ppc64': 0.24.2\n      '@esbuild/android-arm': 0.24.2\n      '@esbuild/android-arm64': 0.24.2\n      '@esbuild/android-x64': 0.24.2\n      '@esbuild/darwin-arm64': 0.24.2\n      '@esbuild/darwin-x64': 0.24.2\n      '@esbuild/freebsd-arm64': 0.24.2\n      '@esbuild/freebsd-x64': 0.24.2\n      '@esbuild/linux-arm': 0.24.2\n      '@esbuild/linux-arm64': 0.24.2\n      '@esbuild/linux-ia32': 0.24.2\n      '@esbuild/linux-loong64': 0.24.2\n      '@esbuild/linux-mips64el': 0.24.2\n      '@esbuild/linux-ppc64': 0.24.2\n      '@esbuild/linux-riscv64': 0.24.2\n      '@esbuild/linux-s390x': 0.24.2\n      '@esbuild/linux-x64': 0.24.2\n      '@esbuild/netbsd-arm64': 0.24.2\n      '@esbuild/netbsd-x64': 0.24.2\n      '@esbuild/openbsd-arm64': 0.24.2\n      '@esbuild/openbsd-x64': 0.24.2\n      '@esbuild/sunos-x64': 0.24.2\n      '@esbuild/win32-arm64': 0.24.2\n      '@esbuild/win32-ia32': 0.24.2\n      '@esbuild/win32-x64': 0.24.2\n\n  estree-walker@3.0.3:\n    dependencies:\n      '@types/estree': 1.0.6\n\n  expect-type@1.1.0: {}\n\n  fsevents@2.3.3:\n    optional: true\n\n  get-tsconfig@4.10.0:\n    dependencies:\n      resolve-pkg-maps: 1.0.0\n\n  loupe@3.1.2: {}\n\n  magic-string@0.30.17:\n    dependencies:\n      '@jridgewell/sourcemap-codec': 1.5.0\n\n  ms@2.1.3: {}\n\n  nanoid@3.3.8: {}\n\n  pathe@2.0.2: {}\n\n  pathval@2.0.0: {}\n\n  picocolors@1.1.1: {}\n\n  postcss@8.5.1:\n    dependencies:\n      nanoid: 3.3.8\n      picocolors: 1.1.1\n      source-map-js: 1.2.1\n\n  resolve-pkg-maps@1.0.0: {}\n\n  rollup@4.31.0:\n    dependencies:\n      '@types/estree': 1.0.6\n    optionalDependencies:\n      '@rollup/rollup-android-arm-eabi': 4.31.0\n      '@rollup/rollup-android-arm64': 4.31.0\n      '@rollup/rollup-darwin-arm64': 4.31.0\n      '@rollup/rollup-darwin-x64': 4.31.0\n      '@rollup/rollup-freebsd-arm64': 4.31.0\n      '@rollup/rollup-freebsd-x64': 4.31.0\n      '@rollup/rollup-linux-arm-gnueabihf': 4.31.0\n      '@rollup/rollup-linux-arm-musleabihf': 4.31.0\n      '@rollup/rollup-linux-arm64-gnu': 4.31.0\n      '@rollup/rollup-linux-arm64-musl': 4.31.0\n      '@rollup/rollup-linux-loongarch64-gnu': 4.31.0\n      '@rollup/rollup-linux-powerpc64le-gnu': 4.31.0\n      '@rollup/rollup-linux-riscv64-gnu': 4.31.0\n      '@rollup/rollup-linux-s390x-gnu': 4.31.0\n      '@rollup/rollup-linux-x64-gnu': 4.31.0\n      '@rollup/rollup-linux-x64-musl': 4.31.0\n      '@rollup/rollup-win32-arm64-msvc': 4.31.0\n      '@rollup/rollup-win32-ia32-msvc': 4.31.0\n      '@rollup/rollup-win32-x64-msvc': 4.31.0\n      fsevents: 2.3.3\n\n  siginfo@2.0.0: {}\n\n  source-map-js@1.2.1: {}\n\n  stackback@0.0.2: {}\n\n  std-env@3.8.0: {}\n\n  tinybench@2.9.0: {}\n\n  tinyexec@0.3.2: {}\n\n  tinypool@1.0.2: {}\n\n  tinyrainbow@2.0.0: {}\n\n  tinyspy@3.0.2: {}\n\n  tslib@2.8.1: {}\n\n  tsx@4.19.2:\n    dependencies:\n      esbuild: 0.23.1\n      get-tsconfig: 4.10.0\n    optionalDependencies:\n      fsevents: 2.3.3\n\n  typescript@5.7.3: {}\n\n  undici-types@6.20.0: {}\n\n  vite-node@3.0.3(@types/node@22.10.7)(tsx@4.19.2):\n    dependencies:\n      cac: 6.7.14\n      debug: 4.4.0\n      es-module-lexer: 1.6.0\n      pathe: 2.0.2\n      vite: 6.0.11(@types/node@22.10.7)(tsx@4.19.2)\n    transitivePeerDependencies:\n      - '@types/node'\n      - jiti\n      - less\n      - lightningcss\n      - sass\n      - sass-embedded\n      - stylus\n      - sugarss\n      - supports-color\n      - terser\n      - tsx\n      - yaml\n\n  vite@6.0.11(@types/node@22.10.7)(tsx@4.19.2):\n    dependencies:\n      esbuild: 0.24.2\n      postcss: 8.5.1\n      rollup: 4.31.0\n    optionalDependencies:\n      '@types/node': 22.10.7\n      fsevents: 2.3.3\n      tsx: 4.19.2\n\n  vitest@3.0.3(@types/node@22.10.7)(tsx@4.19.2):\n    dependencies:\n      '@vitest/expect': 3.0.3\n      '@vitest/mocker': 3.0.3(vite@6.0.11(@types/node@22.10.7)(tsx@4.19.2))\n      '@vitest/pretty-format': 3.0.3\n      '@vitest/runner': 3.0.3\n      '@vitest/snapshot': 3.0.3\n      '@vitest/spy': 3.0.3\n      '@vitest/utils': 3.0.3\n      chai: 5.1.2\n      debug: 4.4.0\n      expect-type: 1.1.0\n      magic-string: 0.30.17\n      pathe: 2.0.2\n      std-env: 3.8.0\n      tinybench: 2.9.0\n      tinyexec: 0.3.2\n      tinypool: 1.0.2\n      tinyrainbow: 2.0.0\n      vite: 6.0.11(@types/node@22.10.7)(tsx@4.19.2)\n      vite-node: 3.0.3(@types/node@22.10.7)(tsx@4.19.2)\n      why-is-node-running: 2.3.0\n    optionalDependencies:\n      '@types/node': 22.10.7\n    transitivePeerDependencies:\n      - jiti\n      - less\n      - lightningcss\n      - msw\n      - sass\n      - sass-embedded\n      - stylus\n      - sugarss\n      - supports-color\n      - terser\n      - tsx\n      - yaml\n\n  why-is-node-running@2.3.0:\n    dependencies:\n      siginfo: 2.0.0\n      stackback: 0.0.2\n\n\n## Test Output\nCommand failed with code 1\n\n> askds@1.0.0 test /Users/mohsen/code/askds\n> vitest --watch=false\n\n\u001b[?25l\n RUN  v3.0.3 /Users/mohsen/code/askds\n\n ❯ tests/example.test.ts (1 test | 1 failed) 4ms\n   × Dificult numbers > odd numbers that don't have the letter 'e' in their spelling 4ms\n     → expected [] to have a length above +0 but got +0\n\n⎯⎯⎯⎯⎯⎯⎯ Failed Tests 1 ⎯⎯⎯⎯⎯⎯⎯\n\n FAIL  tests/example.test.ts > Dificult numbers > odd numbers that don't have the letter 'e' in their spelling\nAssertionError: expected [] to have a length above +0 but got +0\n ❯ tests/example.test.ts:13:20\n     11|         3\n     12|       )\n     13|     ).length.to.be.greaterThan(0);\n       |                    ^\n     14|   });\n     15| });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/1]⎯\n\n\n Test Files  1 failed (1)\n      Tests  1 failed (1)\n   Start at  10:14:02\n   Duration  279ms (transform 49ms, setup 0ms, collect 44ms, tests 4ms, environment 0ms, prepare 44ms)\n\n\u001b[?25h ELIFECYCLE  Test failed. See above for more details.\n\n\n## Git Diff\ndiff --git package.json package.json\nindex 299d135..6b4b6c0 100644\n--- package.json\n+++ package.json\n@@ -4,9 +4,10 @@\n   \"description\": \"\",\n   \"main\": \"index.js\",\n   \"scripts\": {\n-    \"build\": \"tsc && chmod +x dist/index.js\",\n+    \"build\": \"tsc\",\n     \"start\": \"node dist/index.js\",\n-    \"dev\": \"tsx src/index.ts\"\n+    \"dev\": \"tsx src/index.ts\",\n+    \"test\": \"vitest --watch=false\"\n   },\n   \"keywords\": [],\n   \"author\": \"\",\n@@ -15,7 +16,8 @@\n     \"@types/node\": \"^22.10.7\",\n     \"tslib\": \"^2.8.1\",\n     \"tsx\": \"^4.19.2\",\n-    \"typescript\": \"^5.7.3\"\n+    \"typescript\": \"^5.7.3\",\n+    \"vitest\": \"^3.0.3\"\n   },\n   \"dependencies\": {\n     \"@types/blessed\": \"^0.1.25\",\ndiff --git pnpm-lock.yaml pnpm-lock.yaml\nindex b36381b..0e24ba8 100644\n--- pnpm-lock.yaml\n+++ pnpm-lock.yaml\n@@ -30,6 +30,9 @@ importers:\n       typescript:\n         specifier: ^5.7.3\n         version: 5.7.3\n+      vitest:\n+        specifier: ^3.0.3\n+        version: 3.0.3(@types/node@22.10.7)(tsx@4.19.2)\n \n packages:\n \n@@ -39,164 +42,488 @@ packages:\n     cpu: [ppc64]\n     os: [aix]\n \n+  '@esbuild/aix-ppc64@0.24.2':\n+    resolution: {integrity: sha512-thpVCb/rhxE/BnMLQ7GReQLLN8q9qbHmI55F4489/ByVg2aQaQ6kbcLb6FHkocZzQhxc4gx0sCk0tJkKBFzDhA==}\n+    engines: {node: '>=18'}\n+    cpu: [ppc64]\n+    os: [aix]\n+\n   '@esbuild/android-arm64@0.23.1':\n     resolution: {integrity: sha512-xw50ipykXcLstLeWH7WRdQuysJqejuAGPd30vd1i5zSyKK3WE+ijzHmLKxdiCMtH1pHz78rOg0BKSYOSB/2Khw==}\n     engines: {node: '>=18'}\n     cpu: [arm64]\n     os: [android]\n \n+  '@esbuild/android-arm64@0.24.2':\n+    resolution: {integrity: sha512-cNLgeqCqV8WxfcTIOeL4OAtSmL8JjcN6m09XIgro1Wi7cF4t/THaWEa7eL5CMoMBdjoHOTh/vwTO/o2TRXIyzg==}\n+    engines: {node: '>=18'}\n+    cpu: [arm64]\n+    os: [android]\n+\n   '@esbuild/android-arm@0.23.1':\n     resolution: {integrity: sha512-uz6/tEy2IFm9RYOyvKl88zdzZfwEfKZmnX9Cj1BHjeSGNuGLuMD1kR8y5bteYmwqKm1tj8m4cb/aKEorr6fHWQ==}\n     engines: {node: '>=18'}\n     cpu: [arm]\n     os: [android]\n \n+  '@esbuild/android-arm@0.24.2':\n+    resolution: {integrity: sha512-tmwl4hJkCfNHwFB3nBa8z1Uy3ypZpxqxfTQOcHX+xRByyYgunVbZ9MzUUfb0RxaHIMnbHagwAxuTL+tnNM+1/Q==}\n+    engines: {node: '>=18'}\n+    cpu: [arm]\n+    os: [android]\n+\n   '@esbuild/android-x64@0.23.1':\n     resolution: {integrity: sha512-nlN9B69St9BwUoB+jkyU090bru8L0NA3yFvAd7k8dNsVH8bi9a8cUAUSEcEEgTp2z3dbEDGJGfP6VUnkQnlReg==}\n     engines: {node: '>=18'}\n     cpu: [x64]\n     os: [android]\n \n+  '@esbuild/android-x64@0.24.2':\n+    resolution: {integrity: sha512-B6Q0YQDqMx9D7rvIcsXfmJfvUYLoP722bgfBlO5cGvNVb5V/+Y7nhBE3mHV9OpxBf4eAS2S68KZztiPaWq4XYw==}\n+    engines: {node: '>=18'}\n+    cpu: [x64]\n+    os: [android]\n+\n   '@esbuild/darwin-arm64@0.23.1':\n     resolution: {integrity: sha512-YsS2e3Wtgnw7Wq53XXBLcV6JhRsEq8hkfg91ESVadIrzr9wO6jJDMZnCQbHm1Guc5t/CdDiFSSfWP58FNuvT3Q==}\n     engines: {node: '>=18'}\n     cpu: [arm64]\n     os: [darwin]\n \n+  '@esbuild/darwin-arm64@0.24.2':\n+    resolution: {integrity: sha512-kj3AnYWc+CekmZnS5IPu9D+HWtUI49hbnyqk0FLEJDbzCIQt7hg7ucF1SQAilhtYpIujfaHr6O0UHlzzSPdOeA==}\n+    engines: {node: '>=18'}\n+    cpu: [arm64]\n+    os: [darwin]\n+\n   '@esbuild/darwin-x64@0.23.1':\n     resolution: {integrity: sha512-aClqdgTDVPSEGgoCS8QDG37Gu8yc9lTHNAQlsztQ6ENetKEO//b8y31MMu2ZaPbn4kVsIABzVLXYLhCGekGDqw==}\n     engines: {node: '>=18'}\n     cpu: [x64]\n     os: [darwin]\n \n+  '@esbuild/darwin-x64@0.24.2':\n+    resolution: {integrity: sha512-WeSrmwwHaPkNR5H3yYfowhZcbriGqooyu3zI/3GGpF8AyUdsrrP0X6KumITGA9WOyiJavnGZUwPGvxvwfWPHIA==}\n+    engines: {node: '>=18'}\n+    cpu: [x64]\n+    os: [darwin]\n+\n   '@esbuild/freebsd-arm64@0.23.1':\n     resolution: {integrity: sha512-h1k6yS8/pN/NHlMl5+v4XPfikhJulk4G+tKGFIOwURBSFzE8bixw1ebjluLOjfwtLqY0kewfjLSrO6tN2MgIhA==}\n     engines: {node: '>=18'}\n     cpu: [arm64]\n     os: [freebsd]\n \n+  '@esbuild/freebsd-arm64@0.24.2':\n+    resolution: {integrity: sha512-UN8HXjtJ0k/Mj6a9+5u6+2eZ2ERD7Edt1Q9IZiB5UZAIdPnVKDoG7mdTVGhHJIeEml60JteamR3qhsr1r8gXvg==}\n+    engines: {node: '>=18'}\n+    cpu: [arm64]\n+    os: [freebsd]\n+\n   '@esbuild/freebsd-x64@0.23.1':\n     resolution: {integrity: sha512-lK1eJeyk1ZX8UklqFd/3A60UuZ/6UVfGT2LuGo3Wp4/z7eRTRYY+0xOu2kpClP+vMTi9wKOfXi2vjUpO1Ro76g==}\n     engines: {node: '>=18'}\n     cpu: [x64]\n     os: [freebsd]\n \n+  '@esbuild/freebsd-x64@0.24.2':\n+    resolution: {integrity: sha512-TvW7wE/89PYW+IevEJXZ5sF6gJRDY/14hyIGFXdIucxCsbRmLUcjseQu1SyTko+2idmCw94TgyaEZi9HUSOe3Q==}\n+    engines: {node: '>=18'}\n+    cpu: [x64]\n+    os: [freebsd]\n+\n   '@esbuild/linux-arm64@0.23.1':\n     resolution: {integrity: sha512-/93bf2yxencYDnItMYV/v116zff6UyTjo4EtEQjUBeGiVpMmffDNUyD9UN2zV+V3LRV3/on4xdZ26NKzn6754g==}\n     engines: {node: '>=18'}\n     cpu: [arm64]\n     os: [linux]\n \n+  '@esbuild/linux-arm64@0.24.2':\n+    resolution: {integrity: sha512-7HnAD6074BW43YvvUmE/35Id9/NB7BeX5EoNkK9obndmZBUk8xmJJeU7DwmUeN7tkysslb2eSl6CTrYz6oEMQg==}\n+    engines: {node: '>=18'}\n+    cpu: [arm64]\n+    os: [linux]\n+\n   '@esbuild/linux-arm@0.23.1':\n     resolution: {integrity: sha512-CXXkzgn+dXAPs3WBwE+Kvnrf4WECwBdfjfeYHpMeVxWE0EceB6vhWGShs6wi0IYEqMSIzdOF1XjQ/Mkm5d7ZdQ==}\n     engines: {node: '>=18'}\n     cpu: [arm]\n     os: [linux]\n \n+  '@esbuild/linux-arm@0.24.2':\n+    resolution: {integrity: sha512-n0WRM/gWIdU29J57hJyUdIsk0WarGd6To0s+Y+LwvlC55wt+GT/OgkwoXCXvIue1i1sSNWblHEig00GBWiJgfA==}\n+    engines: {node: '>=18'}\n+    cpu: [arm]\n+    os: [linux]\n+\n   '@esbuild/linux-ia32@0.23.1':\n     resolution: {integrity: sha512-VTN4EuOHwXEkXzX5nTvVY4s7E/Krz7COC8xkftbbKRYAl96vPiUssGkeMELQMOnLOJ8k3BY1+ZY52tttZnHcXQ==}\n     engines: {node: '>=18'}\n     cpu: [ia32]\n     os: [linux]\n \n+  '@esbuild/linux-ia32@0.24.2':\n+    resolution: {integrity: sha512-sfv0tGPQhcZOgTKO3oBE9xpHuUqguHvSo4jl+wjnKwFpapx+vUDcawbwPNuBIAYdRAvIDBfZVvXprIj3HA+Ugw==}\n+    engines: {node: '>=18'}\n+    cpu: [ia32]\n+    os: [linux]\n+\n   '@esbuild/linux-loong64@0.23.1':\n     resolution: {integrity: sha512-Vx09LzEoBa5zDnieH8LSMRToj7ir/Jeq0Gu6qJ/1GcBq9GkfoEAoXvLiW1U9J1qE/Y/Oyaq33w5p2ZWrNNHNEw==}\n     engines: {node: '>=18'}\n     cpu: [loong64]\n     os: [linux]\n \n+  '@esbuild/linux-loong64@0.24.2':\n+    resolution: {integrity: sha512-CN9AZr8kEndGooS35ntToZLTQLHEjtVB5n7dl8ZcTZMonJ7CCfStrYhrzF97eAecqVbVJ7APOEe18RPI4KLhwQ==}\n+    engines: {node: '>=18'}\n+    cpu: [loong64]\n+    os: [linux]\n+\n   '@esbuild/linux-mips64el@0.23.1':\n     resolution: {integrity: sha512-nrFzzMQ7W4WRLNUOU5dlWAqa6yVeI0P78WKGUo7lg2HShq/yx+UYkeNSE0SSfSure0SqgnsxPvmAUu/vu0E+3Q==}\n     engines: {node: '>=18'}\n     cpu: [mips64el]\n     os: [linux]\n \n+  '@esbuild/linux-mips64el@0.24.2':\n+    resolution: {integrity: sha512-iMkk7qr/wl3exJATwkISxI7kTcmHKE+BlymIAbHO8xanq/TjHaaVThFF6ipWzPHryoFsesNQJPE/3wFJw4+huw==}\n+    engines: {node: '>=18'}\n+    cpu: [mips64el]\n+    os: [linux]\n+\n   '@esbuild/linux-ppc64@0.23.1':\n     resolution: {integrity: sha512-dKN8fgVqd0vUIjxuJI6P/9SSSe/mB9rvA98CSH2sJnlZ/OCZWO1DJvxj8jvKTfYUdGfcq2dDxoKaC6bHuTlgcw==}\n     engines: {node: '>=18'}\n     cpu: [ppc64]\n     os: [linux]\n \n+  '@esbuild/linux-ppc64@0.24.2':\n+    resolution: {integrity: sha512-shsVrgCZ57Vr2L8mm39kO5PPIb+843FStGt7sGGoqiiWYconSxwTiuswC1VJZLCjNiMLAMh34jg4VSEQb+iEbw==}\n+    engines: {node: '>=18'}\n+    cpu: [ppc64]\n+    os: [linux]\n+\n   '@esbuild/linux-riscv64@0.23.1':\n     resolution: {integrity: sha512-5AV4Pzp80fhHL83JM6LoA6pTQVWgB1HovMBsLQ9OZWLDqVY8MVobBXNSmAJi//Csh6tcY7e7Lny2Hg1tElMjIA==}\n     engines: {node: '>=18'}\n     cpu: [riscv64]\n     os: [linux]\n \n+  '@esbuild/linux-riscv64@0.24.2':\n+    resolution: {integrity: sha512-4eSFWnU9Hhd68fW16GD0TINewo1L6dRrB+oLNNbYyMUAeOD2yCK5KXGK1GH4qD/kT+bTEXjsyTCiJGHPZ3eM9Q==}\n+    engines: {node: '>=18'}\n+    cpu: [riscv64]\n+    os: [linux]\n+\n   '@esbuild/linux-s390x@0.23.1':\n     resolution: {integrity: sha512-9ygs73tuFCe6f6m/Tb+9LtYxWR4c9yg7zjt2cYkjDbDpV/xVn+68cQxMXCjUpYwEkze2RcU/rMnfIXNRFmSoDw==}\n     engines: {node: '>=18'}\n     cpu: [s390x]\n     os: [linux]\n \n+  '@esbuild/linux-s390x@0.24.2':\n+    resolution: {integrity: sha512-S0Bh0A53b0YHL2XEXC20bHLuGMOhFDO6GN4b3YjRLK//Ep3ql3erpNcPlEFed93hsQAjAQDNsvcK+hV90FubSw==}\n+    engines: {node: '>=18'}\n+    cpu: [s390x]\n+    os: [linux]\n+\n   '@esbuild/linux-x64@0.23.1':\n     resolution: {integrity: sha512-EV6+ovTsEXCPAp58g2dD68LxoP/wK5pRvgy0J/HxPGB009omFPv3Yet0HiaqvrIrgPTBuC6wCH1LTOY91EO5hQ==}\n     engines: {node: '>=18'}\n     cpu: [x64]\n     os: [linux]\n \n+  '@esbuild/linux-x64@0.24.2':\n+    resolution: {integrity: sha512-8Qi4nQcCTbLnK9WoMjdC9NiTG6/E38RNICU6sUNqK0QFxCYgoARqVqxdFmWkdonVsvGqWhmm7MO0jyTqLqwj0Q==}\n+    engines: {node: '>=18'}\n+    cpu: [x64]\n+    os: [linux]\n+\n+  '@esbuild/netbsd-arm64@0.24.2':\n+    resolution: {integrity: sha512-wuLK/VztRRpMt9zyHSazyCVdCXlpHkKm34WUyinD2lzK07FAHTq0KQvZZlXikNWkDGoT6x3TD51jKQ7gMVpopw==}\n+    engines: {node: '>=18'}\n+    cpu: [arm64]\n+    os: [netbsd]\n+\n   '@esbuild/netbsd-x64@0.23.1':\n     resolution: {integrity: sha512-aevEkCNu7KlPRpYLjwmdcuNz6bDFiE7Z8XC4CPqExjTvrHugh28QzUXVOZtiYghciKUacNktqxdpymplil1beA==}\n     engines: {node: '>=18'}\n     cpu: [x64]\n     os: [netbsd]\n \n+  '@esbuild/netbsd-x64@0.24.2':\n+    resolution: {integrity: sha512-VefFaQUc4FMmJuAxmIHgUmfNiLXY438XrL4GDNV1Y1H/RW3qow68xTwjZKfj/+Plp9NANmzbH5R40Meudu8mmw==}\n+    engines: {node: '>=18'}\n+    cpu: [x64]\n+    os: [netbsd]\n+\n   '@esbuild/openbsd-arm64@0.23.1':\n     resolution: {integrity: sha512-3x37szhLexNA4bXhLrCC/LImN/YtWis6WXr1VESlfVtVeoFJBRINPJ3f0a/6LV8zpikqoUg4hyXw0sFBt5Cr+Q==}\n     engines: {node: '>=18'}\n     cpu: [arm64]\n     os: [openbsd]\n \n+  '@esbuild/openbsd-arm64@0.24.2':\n+    resolution: {integrity: sha512-YQbi46SBct6iKnszhSvdluqDmxCJA+Pu280Av9WICNwQmMxV7nLRHZfjQzwbPs3jeWnuAhE9Jy0NrnJ12Oz+0A==}\n+    engines: {node: '>=18'}\n+    cpu: [arm64]\n+    os: [openbsd]\n+\n   '@esbuild/openbsd-x64@0.23.1':\n     resolution: {integrity: sha512-aY2gMmKmPhxfU+0EdnN+XNtGbjfQgwZj43k8G3fyrDM/UdZww6xrWxmDkuz2eCZchqVeABjV5BpildOrUbBTqA==}\n     engines: {node: '>=18'}\n     cpu: [x64]\n     os: [openbsd]\n \n+  '@esbuild/openbsd-x64@0.24.2':\n+    resolution: {integrity: sha512-+iDS6zpNM6EnJyWv0bMGLWSWeXGN/HTaF/LXHXHwejGsVi+ooqDfMCCTerNFxEkM3wYVcExkeGXNqshc9iMaOA==}\n+    engines: {node: '>=18'}\n+    cpu: [x64]\n+    os: [openbsd]\n+\n   '@esbuild/sunos-x64@0.23.1':\n     resolution: {integrity: sha512-RBRT2gqEl0IKQABT4XTj78tpk9v7ehp+mazn2HbUeZl1YMdaGAQqhapjGTCe7uw7y0frDi4gS0uHzhvpFuI1sA==}\n     engines: {node: '>=18'}\n     cpu: [x64]\n     os: [sunos]\n \n+  '@esbuild/sunos-x64@0.24.2':\n+    resolution: {integrity: sha512-hTdsW27jcktEvpwNHJU4ZwWFGkz2zRJUz8pvddmXPtXDzVKTTINmlmga3ZzwcuMpUvLw7JkLy9QLKyGpD2Yxig==}\n+    engines: {node: '>=18'}\n+    cpu: [x64]\n+    os: [sunos]\n+\n   '@esbuild/win32-arm64@0.23.1':\n     resolution: {integrity: sha512-4O+gPR5rEBe2FpKOVyiJ7wNDPA8nGzDuJ6gN4okSA1gEOYZ67N8JPk58tkWtdtPeLz7lBnY6I5L3jdsr3S+A6A==}\n     engines: {node: '>=18'}\n     cpu: [arm64]\n     os: [win32]\n \n+  '@esbuild/win32-arm64@0.24.2':\n+    resolution: {integrity: sha512-LihEQ2BBKVFLOC9ZItT9iFprsE9tqjDjnbulhHoFxYQtQfai7qfluVODIYxt1PgdoyQkz23+01rzwNwYfutxUQ==}\n+    engines: {node: '>=18'}\n+    cpu: [arm64]\n+    os: [win32]\n+\n   '@esbuild/win32-ia32@0.23.1':\n     resolution: {integrity: sha512-BcaL0Vn6QwCwre3Y717nVHZbAa4UBEigzFm6VdsVdT/MbZ38xoj1X9HPkZhbmaBGUD1W8vxAfffbDe8bA6AKnQ==}\n     engines: {node: '>=18'}\n     cpu: [ia32]\n     os: [win32]\n \n+  '@esbuild/win32-ia32@0.24.2':\n+    resolution: {integrity: sha512-q+iGUwfs8tncmFC9pcnD5IvRHAzmbwQ3GPS5/ceCyHdjXubwQWI12MKWSNSMYLJMq23/IUCvJMS76PDqXe1fxA==}\n+    engines: {node: '>=18'}\n+    cpu: [ia32]\n+    os: [win32]\n+\n   '@esbuild/win32-x64@0.23.1':\n     resolution: {integrity: sha512-BHpFFeslkWrXWyUPnbKm+xYYVYruCinGcftSBaa8zoF9hZO4BcSCFUvHVTtzpIY6YzUnYtuEhZ+C9iEXjxnasg==}\n     engines: {node: '>=18'}\n     cpu: [x64]\n     os: [win32]\n \n+  '@esbuild/win32-x64@0.24.2':\n+    resolution: {integrity: sha512-7VTgWzgMGvup6aSqDPLiW5zHaxYJGTO4OokMjIlrCtf+VpEL+cXKtCvg723iguPYI5oaUNdS+/V7OU2gvXVWEg==}\n+    engines: {node: '>=18'}\n+    cpu: [x64]\n+    os: [win32]\n+\n+  '@jridgewell/sourcemap-codec@1.5.0':\n+    resolution: {integrity: sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==}\n+\n+  '@rollup/rollup-android-arm-eabi@4.31.0':\n+    resolution: {integrity: sha512-9NrR4033uCbUBRgvLcBrJofa2KY9DzxL2UKZ1/4xA/mnTNyhZCWBuD8X3tPm1n4KxcgaraOYgrFKSgwjASfmlA==}\n+    cpu: [arm]\n+    os: [android]\n+\n+  '@rollup/rollup-android-arm64@4.31.0':\n+    resolution: {integrity: sha512-iBbODqT86YBFHajxxF8ebj2hwKm1k8PTBQSojSt3d1FFt1gN+xf4CowE47iN0vOSdnd+5ierMHBbu/rHc7nq5g==}\n+    cpu: [arm64]\n+    os: [android]\n+\n+  '@rollup/rollup-darwin-arm64@4.31.0':\n+    resolution: {integrity: sha512-WHIZfXgVBX30SWuTMhlHPXTyN20AXrLH4TEeH/D0Bolvx9PjgZnn4H677PlSGvU6MKNsjCQJYczkpvBbrBnG6g==}\n+    cpu: [arm64]\n+    os: [darwin]\n+\n+  '@rollup/rollup-darwin-x64@4.31.0':\n+    resolution: {integrity: sha512-hrWL7uQacTEF8gdrQAqcDy9xllQ0w0zuL1wk1HV8wKGSGbKPVjVUv/DEwT2+Asabf8Dh/As+IvfdU+H8hhzrQQ==}\n+    cpu: [x64]\n+    os: [darwin]\n+\n+  '@rollup/rollup-freebsd-arm64@4.31.0':\n+    resolution: {integrity: sha512-S2oCsZ4hJviG1QjPY1h6sVJLBI6ekBeAEssYKad1soRFv3SocsQCzX6cwnk6fID6UQQACTjeIMB+hyYrFacRew==}\n+    cpu: [arm64]\n+    os: [freebsd]\n+\n+  '@rollup/rollup-freebsd-x64@4.31.0':\n+    resolution: {integrity: sha512-pCANqpynRS4Jirn4IKZH4tnm2+2CqCNLKD7gAdEjzdLGbH1iO0zouHz4mxqg0uEMpO030ejJ0aA6e1PJo2xrPA==}\n+    cpu: [x64]\n+    os: [freebsd]\n+\n+  '@rollup/rollup-linux-arm-gnueabihf@4.31.0':\n+    resolution: {integrity: sha512-0O8ViX+QcBd3ZmGlcFTnYXZKGbFu09EhgD27tgTdGnkcYXLat4KIsBBQeKLR2xZDCXdIBAlWLkiXE1+rJpCxFw==}\n+    cpu: [arm]\n+    os: [linux]\n+\n+  '@rollup/rollup-linux-arm-musleabihf@4.31.0':\n+    resolution: {integrity: sha512-w5IzG0wTVv7B0/SwDnMYmbr2uERQp999q8FMkKG1I+j8hpPX2BYFjWe69xbhbP6J9h2gId/7ogesl9hwblFwwg==}\n+    cpu: [arm]\n+    os: [linux]\n+\n+  '@rollup/rollup-linux-arm64-gnu@4.31.0':\n+    resolution: {integrity: sha512-JyFFshbN5xwy6fulZ8B/8qOqENRmDdEkcIMF0Zz+RsfamEW+Zabl5jAb0IozP/8UKnJ7g2FtZZPEUIAlUSX8cA==}\n+    cpu: [arm64]\n+    os: [linux]\n+\n+  '@rollup/rollup-linux-arm64-musl@4.31.0':\n+    resolution: {integrity: sha512-kpQXQ0UPFeMPmPYksiBL9WS/BDiQEjRGMfklVIsA0Sng347H8W2iexch+IEwaR7OVSKtr2ZFxggt11zVIlZ25g==}\n+    cpu: [arm64]\n+    os: [linux]\n+\n+  '@rollup/rollup-linux-loongarch64-gnu@4.31.0':\n+    resolution: {integrity: sha512-pMlxLjt60iQTzt9iBb3jZphFIl55a70wexvo8p+vVFK+7ifTRookdoXX3bOsRdmfD+OKnMozKO6XM4zR0sHRrQ==}\n+    cpu: [loong64]\n+    os: [linux]\n+\n+  '@rollup/rollup-linux-powerpc64le-gnu@4.31.0':\n+    resolution: {integrity: sha512-D7TXT7I/uKEuWiRkEFbed1UUYZwcJDU4vZQdPTcepK7ecPhzKOYk4Er2YR4uHKme4qDeIh6N3XrLfpuM7vzRWQ==}\n+    cpu: [ppc64]\n+    os: [linux]\n+\n+  '@rollup/rollup-linux-riscv64-gnu@4.31.0':\n+    resolution: {integrity: sha512-wal2Tc8O5lMBtoePLBYRKj2CImUCJ4UNGJlLwspx7QApYny7K1cUYlzQ/4IGQBLmm+y0RS7dwc3TDO/pmcneTw==}\n+    cpu: [riscv64]\n+    os: [linux]\n+\n+  '@rollup/rollup-linux-s390x-gnu@4.31.0':\n+    resolution: {integrity: sha512-O1o5EUI0+RRMkK9wiTVpk2tyzXdXefHtRTIjBbmFREmNMy7pFeYXCFGbhKFwISA3UOExlo5GGUuuj3oMKdK6JQ==}\n+    cpu: [s390x]\n+    os: [linux]\n+\n+  '@rollup/rollup-linux-x64-gnu@4.31.0':\n+    resolution: {integrity: sha512-zSoHl356vKnNxwOWnLd60ixHNPRBglxpv2g7q0Cd3Pmr561gf0HiAcUBRL3S1vPqRC17Zo2CX/9cPkqTIiai1g==}\n+    cpu: [x64]\n+    os: [linux]\n+\n+  '@rollup/rollup-linux-x64-musl@4.31.0':\n+    resolution: {integrity: sha512-ypB/HMtcSGhKUQNiFwqgdclWNRrAYDH8iMYH4etw/ZlGwiTVxBz2tDrGRrPlfZu6QjXwtd+C3Zib5pFqID97ZA==}\n+    cpu: [x64]\n+    os: [linux]\n+\n+  '@rollup/rollup-win32-arm64-msvc@4.31.0':\n+    resolution: {integrity: sha512-JuhN2xdI/m8Hr+aVO3vspO7OQfUFO6bKLIRTAy0U15vmWjnZDLrEgCZ2s6+scAYaQVpYSh9tZtRijApw9IXyMw==}\n+    cpu: [arm64]\n+    os: [win32]\n+\n+  '@rollup/rollup-win32-ia32-msvc@4.31.0':\n+    resolution: {integrity: sha512-U1xZZXYkvdf5MIWmftU8wrM5PPXzyaY1nGCI4KI4BFfoZxHamsIe+BtnPLIvvPykvQWlVbqUXdLa4aJUuilwLQ==}\n+    cpu: [ia32]\n+    os: [win32]\n+\n+  '@rollup/rollup-win32-x64-msvc@4.31.0':\n+    resolution: {integrity: sha512-ul8rnCsUumNln5YWwz0ted2ZHFhzhRRnkpBZ+YRuHoRAlUji9KChpOUOndY7uykrPEPXVbHLlsdo6v5yXo/TXw==}\n+    cpu: [x64]\n+    os: [win32]\n+\n   '@types/blessed@0.1.25':\n     resolution: {integrity: sha512-kQsjBgtsbJLmG6CJA+Z6Nujj+tq1fcSE3UIowbDvzQI4wWmoTV7djUDhSo5lDjgwpIN0oRvks0SA5mMdKE5eFg==}\n \n+  '@types/estree@1.0.6':\n+    resolution: {integrity: sha512-AYnb1nQyY49te+VRAVgmzfcgjYS91mY5P0TKUDCLEM+gNnA+3T6rWITXRLYCpahpqSQbN5cE+gHpnPyXjHWxcw==}\n+\n   '@types/node@22.10.7':\n     resolution: {integrity: sha512-V09KvXxFiutGp6B7XkpaDXlNadZxrzajcY50EuoLIpQ6WWYCSvf19lVIazzfIzQvhUN2HjX12spLojTnhuKlGg==}\n \n+  '@vitest/expect@3.0.3':\n+    resolution: {integrity: sha512-SbRCHU4qr91xguu+dH3RUdI5dC86zm8aZWydbp961aIR7G8OYNN6ZiayFuf9WAngRbFOfdrLHCGgXTj3GtoMRQ==}\n+\n+  '@vitest/mocker@3.0.3':\n+    resolution: {integrity: sha512-XT2XBc4AN9UdaxJAeIlcSZ0ILi/GzmG5G8XSly4gaiqIvPV3HMTSIDZWJVX6QRJ0PX1m+W8Cy0K9ByXNb/bPIA==}\n+    peerDependencies:\n+      msw: ^2.4.9\n+      vite: ^5.0.0 || ^6.0.0\n+    peerDependenciesMeta:\n+      msw:\n+        optional: true\n+      vite:\n+        optional: true\n+\n+  '@vitest/pretty-format@3.0.3':\n+    resolution: {integrity: sha512-gCrM9F7STYdsDoNjGgYXKPq4SkSxwwIU5nkaQvdUxiQ0EcNlez+PdKOVIsUJvh9P9IeIFmjn4IIREWblOBpP2Q==}\n+\n+  '@vitest/runner@3.0.3':\n+    resolution: {integrity: sha512-Rgi2kOAk5ZxWZlwPguRJFOBmWs6uvvyAAR9k3MvjRvYrG7xYvKChZcmnnpJCS98311CBDMqsW9MzzRFsj2gX3g==}\n+\n+  '@vitest/snapshot@3.0.3':\n+    resolution: {integrity: sha512-kNRcHlI4txBGztuJfPEJ68VezlPAXLRT1u5UCx219TU3kOG2DplNxhWLwDf2h6emwmTPogzLnGVwP6epDaJN6Q==}\n+\n+  '@vitest/spy@3.0.3':\n+    resolution: {integrity: sha512-7/dgux8ZBbF7lEIKNnEqQlyRaER9nkAL9eTmdKJkDO3hS8p59ATGwKOCUDHcBLKr7h/oi/6hP+7djQk8049T2A==}\n+\n+  '@vitest/utils@3.0.3':\n+    resolution: {integrity: sha512-f+s8CvyzPtMFY1eZKkIHGhPsQgYo5qCm6O8KZoim9qm1/jT64qBgGpO5tHscNH6BzRHM+edLNOP+3vO8+8pE/A==}\n+\n+  assertion-error@2.0.1:\n+    resolution: {integrity: sha512-Izi8RQcffqCeNVgFigKli1ssklIbpHnCYc6AknXGYoB6grJqyeby7jv12JUQgmTAnIDnbck1uxksT4dzN3PWBA==}\n+    engines: {node: '>=12'}\n+\n   blessed@0.1.81:\n     resolution: {integrity: sha512-LoF5gae+hlmfORcG1M5+5XZi4LBmvlXTzwJWzUlPryN/SJdSflZvROM2TwkT0GMpq7oqT48NRd4GS7BiVBc5OQ==}\n     engines: {node: '>= 0.8.0'}\n     hasBin: true\n \n+  cac@6.7.14:\n+    resolution: {integrity: sha512-b6Ilus+c3RrdDk+JhLKUAQfzzgLEPy6wcXqS7f/xe1EETvsDP6GORG7SFuOs6cID5YkqchW/LXZbX5bc8j7ZcQ==}\n+    engines: {node: '>=8'}\n+\n+  chai@5.1.2:\n+    resolution: {integrity: sha512-aGtmf24DW6MLHHG5gCx4zaI3uBq3KRtxeVs0DjFH6Z0rDNbsvTxFASFvdj79pxjxZ8/5u3PIiN3IwEIQkiiuPw==}\n+    engines: {node: '>=12'}\n+\n+  check-error@2.1.1:\n+    resolution: {integrity: sha512-OAlb+T7V4Op9OwdkjmguYRqncdlx5JiofwOAUkmTF+jNdHwzTaTs4sRAGpzLF3oOz5xAyDGrPgeIDFQmDOTiJw==}\n+    engines: {node: '>= 16'}\n+\n   commander@13.1.0:\n     resolution: {integrity: sha512-/rFeCpNJQbhSZjGVwO9RFV3xPqbnERS8MmIQzCtD/zl6gpJuV/bMLuN92oG3F7d8oDEHHRrujSXNUr8fpjntKw==}\n     engines: {node: '>=18'}\n \n+  debug@4.4.0:\n+    resolution: {integrity: sha512-6WTZ/IxCY/T6BALoZHaE4ctp9xm+Z5kY/pzYaCHRFeyVhojxlrm+46y68HA6hr0TcwEssoxNiDEUJQjfPZ/RYA==}\n+    engines: {node: '>=6.0'}\n+    peerDependencies:\n+      supports-color: '*'\n+    peerDependenciesMeta:\n+      supports-color:\n+        optional: true\n+\n+  deep-eql@5.0.2:\n+    resolution: {integrity: sha512-h5k/5U50IJJFpzfL6nO9jaaumfjO/f2NjK/oYB2Djzm4p9L+3T9qWpZqZ2hAbLPuuYq9wrU08WQyBTL5GbPk5Q==}\n+    engines: {node: '>=6'}\n+\n+  es-module-lexer@1.6.0:\n+    resolution: {integrity: sha512-qqnD1yMU6tk/jnaMosogGySTZP8YtUgAffA9nMN+E/rjxcfRQ6IEk7IiozUjgxKoFHBGjTLnrHB/YC45r/59EQ==}\n+\n   esbuild@0.23.1:\n     resolution: {integrity: sha512-VVNz/9Sa0bs5SELtn3f7qhJCDPCF5oMEl5cO9/SSinpE9hbPVvxbd572HH5AKiP7WD8INO53GgfDDhRjkylHEg==}\n     engines: {node: '>=18'}\n     hasBin: true\n \n+  esbuild@0.24.2:\n+    resolution: {integrity: sha512-+9egpBW8I3CD5XPe0n6BfT5fxLzxrlDzqydF3aviG+9ni1lDC/OvMHcxqEFV0+LANZG5R1bFMWfUrjVsdwxJvA==}\n+    engines: {node: '>=18'}\n+    hasBin: true\n+\n+  estree-walker@3.0.3:\n+    resolution: {integrity: sha512-7RUKfXgSMMkzt6ZuXmqapOurLGPPfgj6l9uRZ7lRGolvk0y2yocc35LdcxKC5PQZdn2DMqioAQ2NoWcrTKmm6g==}\n+\n+  expect-type@1.1.0:\n+    resolution: {integrity: sha512-bFi65yM+xZgk+u/KRIpekdSYkTB5W1pEf0Lt8Q8Msh7b+eQ7LXVtIB1Bkm4fvclDEL1b2CZkMhv2mOeF8tMdkA==}\n+    engines: {node: '>=12.0.0'}\n+\n   fsevents@2.3.3:\n     resolution: {integrity: sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==}\n     engines: {node: ^8.16.0 || ^10.6.0 || >=11.0.0}\n@@ -205,9 +532,73 @@ packages:\n   get-tsconfig@4.10.0:\n     resolution: {integrity: sha512-kGzZ3LWWQcGIAmg6iWvXn0ei6WDtV26wzHRMwDSzmAbcXrTEXxHy6IehI6/4eT6VRKyMP1eF1VqwrVUmE/LR7A==}\n \n+  loupe@3.1.2:\n+    resolution: {integrity: sha512-23I4pFZHmAemUnz8WZXbYRSKYj801VDaNv9ETuMh7IrMc7VuVVSo+Z9iLE3ni30+U48iDWfi30d3twAXBYmnCg==}\n+\n+  magic-string@0.30.17:\n+    resolution: {integrity: sha512-sNPKHvyjVf7gyjwS4xGTaW/mCnF8wnjtifKBEhxfZ7E/S8tQ0rssrwGNn6q8JH/ohItJfSQp9mBtQYuTlH5QnA==}\n+\n+  ms@2.1.3:\n+    resolution: {integrity: sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==}\n+\n+  nanoid@3.3.8:\n+    resolution: {integrity: sha512-WNLf5Sd8oZxOm+TzppcYk8gVOgP+l58xNy58D0nbUnOxOWRWvlcCV4kUF7ltmI6PsrLl/BgKEyS4mqsGChFN0w==}\n+    engines: {node: ^10 || ^12 || ^13.7 || ^14 || >=15.0.1}\n+    hasBin: true\n+\n+  pathe@2.0.2:\n+    resolution: {integrity: sha512-15Ztpk+nov8DR524R4BF7uEuzESgzUEAV4Ah7CUMNGXdE5ELuvxElxGXndBl32vMSsWa1jpNf22Z+Er3sKwq+w==}\n+\n+  pathval@2.0.0:\n+    resolution: {integrity: sha512-vE7JKRyES09KiunauX7nd2Q9/L7lhok4smP9RZTDeD4MVs72Dp2qNFVz39Nz5a0FVEW0BJR6C0DYrq6unoziZA==}\n+    engines: {node: '>= 14.16'}\n+\n+  picocolors@1.1.1:\n+    resolution: {integrity: sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==}\n+\n+  postcss@8.5.1:\n+    resolution: {integrity: sha512-6oz2beyjc5VMn/KV1pPw8fliQkhBXrVn1Z3TVyqZxU8kZpzEKhBdmCFqI6ZbmGtamQvQGuU1sgPTk8ZrXDD7jQ==}\n+    engines: {node: ^10 || ^12 || >=14}\n+\n   resolve-pkg-maps@1.0.0:\n     resolution: {integrity: sha512-seS2Tj26TBVOC2NIc2rOe2y2ZO7efxITtLZcGSOnHHNOQ7CkiUBfw0Iw2ck6xkIhPwLhKNLS8BO+hEpngQlqzw==}\n \n+  rollup@4.31.0:\n+    resolution: {integrity: sha512-9cCE8P4rZLx9+PjoyqHLs31V9a9Vpvfo4qNcs6JCiGWYhw2gijSetFbH6SSy1whnkgcefnUwr8sad7tgqsGvnw==}\n+    engines: {node: '>=18.0.0', npm: '>=8.0.0'}\n+    hasBin: true\n+\n+  siginfo@2.0.0:\n+    resolution: {integrity: sha512-ybx0WO1/8bSBLEWXZvEd7gMW3Sn3JFlW3TvX1nREbDLRNQNaeNN8WK0meBwPdAaOI7TtRRRJn/Es1zhrrCHu7g==}\n+\n+  source-map-js@1.2.1:\n+    resolution: {integrity: sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==}\n+    engines: {node: '>=0.10.0'}\n+\n+  stackback@0.0.2:\n+    resolution: {integrity: sha512-1XMJE5fQo1jGH6Y/7ebnwPOBEkIEnT4QF32d5R1+VXdXveM0IBMJt8zfaxX1P3QhVwrYe+576+jkANtSS2mBbw==}\n+\n+  std-env@3.8.0:\n+    resolution: {integrity: sha512-Bc3YwwCB+OzldMxOXJIIvC6cPRWr/LxOp48CdQTOkPyk/t4JWWJbrilwBd7RJzKV8QW7tJkcgAmeuLLJugl5/w==}\n+\n+  tinybench@2.9.0:\n+    resolution: {integrity: sha512-0+DUvqWMValLmha6lr4kD8iAMK1HzV0/aKnCtWb9v9641TnP/MFb7Pc2bxoxQjTXAErryXVgUOfv2YqNllqGeg==}\n+\n+  tinyexec@0.3.2:\n+    resolution: {integrity: sha512-KQQR9yN7R5+OSwaK0XQoj22pwHoTlgYqmUscPYoknOoWCWfj/5/ABTMRi69FrKU5ffPVh5QcFikpWJI/P1ocHA==}\n+\n+  tinypool@1.0.2:\n+    resolution: {integrity: sha512-al6n+QEANGFOMf/dmUMsuS5/r9B06uwlyNjZZql/zv8J7ybHCgoihBNORZCY2mzUuAnomQa2JdhyHKzZxPCrFA==}\n+    engines: {node: ^18.0.0 || >=20.0.0}\n+\n+  tinyrainbow@2.0.0:\n+    resolution: {integrity: sha512-op4nsTR47R6p0vMUUoYl/a+ljLFVtlfaXkLQmqfLR1qHma1h/ysYk4hEXZ880bf2CYgTskvTa/e196Vd5dDQXw==}\n+    engines: {node: '>=14.0.0'}\n+\n+  tinyspy@3.0.2:\n+    resolution: {integrity: sha512-n1cw8k1k0x4pgA2+9XrOkFydTerNcJ1zWCO5Nn9scWHTD+5tp8dghT2x1uduQePZTZgd3Tupf+x9BxJjeJi77Q==}\n+    engines: {node: '>=14.0.0'}\n+\n   tslib@2.8.1:\n     resolution: {integrity: sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==}\n \n@@ -224,92 +615,365 @@ packages:\n   undici-types@6.20.0:\n     resolution: {integrity: sha512-Ny6QZ2Nju20vw1SRHe3d9jVu6gJ+4e3+MMpqu7pqE5HT6WsTSlce++GQmK5UXS8mzV8DSYHrQH+Xrf2jVcuKNg==}\n \n+  vite-node@3.0.3:\n+    resolution: {integrity: sha512-0sQcwhwAEw/UJGojbhOrnq3HtiZ3tC7BzpAa0lx3QaTX0S3YX70iGcik25UBdB96pmdwjyY2uyKNYruxCDmiEg==}\n+    engines: {node: ^18.0.0 || ^20.0.0 || >=22.0.0}\n+    hasBin: true\n+\n+  vite@6.0.11:\n+    resolution: {integrity: sha512-4VL9mQPKoHy4+FE0NnRE/kbY51TOfaknxAjt3fJbGJxhIpBZiqVzlZDEesWWsuREXHwNdAoOFZ9MkPEVXczHwg==}\n+    engines: {node: ^18.0.0 || ^20.0.0 || >=22.0.0}\n+    hasBin: true\n+    peerDependencies:\n+      '@types/node': ^18.0.0 || ^20.0.0 || >=22.0.0\n+      jiti: '>=1.21.0'\n+      less: '*'\n+      lightningcss: ^1.21.0\n+      sass: '*'\n+      sass-embedded: '*'\n+      stylus: '*'\n+      sugarss: '*'\n+      terser: ^5.16.0\n+      tsx: ^4.8.1\n+      yaml: ^2.4.2\n+    peerDependenciesMeta:\n+      '@types/node':\n+        optional: true\n+      jiti:\n+        optional: true\n+      less:\n+        optional: true\n+      lightningcss:\n+        optional: true\n+      sass:\n+        optional: true\n+      sass-embedded:\n+        optional: true\n+      stylus:\n+        optional: true\n+      sugarss:\n+        optional: true\n+      terser:\n+        optional: true\n+      tsx:\n+        optional: true\n+      yaml:\n+        optional: true\n+\n+  vitest@3.0.3:\n+    resolution: {integrity: sha512-dWdwTFUW9rcnL0LyF2F+IfvNQWB0w9DERySCk8VMG75F8k25C7LsZoh6XfCjPvcR8Nb+Lqi9JKr6vnzH7HSrpQ==}\n+    engines: {node: ^18.0.0 || ^20.0.0 || >=22.0.0}\n+    hasBin: true\n+    peerDependencies:\n+      '@edge-runtime/vm': '*'\n+      '@types/node': ^18.0.0 || ^20.0.0 || >=22.0.0\n+      '@vitest/browser': 3.0.3\n+      '@vitest/ui': 3.0.3\n+      happy-dom: '*'\n+      jsdom: '*'\n+    peerDependenciesMeta:\n+      '@edge-runtime/vm':\n+        optional: true\n+      '@types/node':\n+        optional: true\n+      '@vitest/browser':\n+        optional: true\n+      '@vitest/ui':\n+        optional: true\n+      happy-dom:\n+        optional: true\n+      jsdom:\n+        optional: true\n+\n+  why-is-node-running@2.3.0:\n+    resolution: {integrity: sha512-hUrmaWBdVDcxvYqnyh09zunKzROWjbZTiNy8dBEjkS7ehEDQibXJ7XvlmtbwuTclUiIyN+CyXQD4Vmko8fNm8w==}\n+    engines: {node: '>=8'}\n+    hasBin: true\n+\n snapshots:\n \n   '@esbuild/aix-ppc64@0.23.1':\n     optional: true\n \n+  '@esbuild/aix-ppc64@0.24.2':\n+    optional: true\n+\n   '@esbuild/android-arm64@0.23.1':\n     optional: true\n \n+  '@esbuild/android-arm64@0.24.2':\n+    optional: true\n+\n   '@esbuild/android-arm@0.23.1':\n     optional: true\n \n+  '@esbuild/android-arm@0.24.2':\n+    optional: true\n+\n   '@esbuild/android-x64@0.23.1':\n     optional: true\n \n+  '@esbuild/android-x64@0.24.2':\n+    optional: true\n+\n   '@esbuild/darwin-arm64@0.23.1':\n     optional: true\n \n+  '@esbuild/darwin-arm64@0.24.2':\n+    optional: true\n+\n   '@esbuild/darwin-x64@0.23.1':\n     optional: true\n \n+  '@esbuild/darwin-x64@0.24.2':\n+    optional: true\n+\n   '@esbuild/freebsd-arm64@0.23.1':\n     optional: true\n \n+  '@esbuild/freebsd-arm64@0.24.2':\n+    optional: true\n+\n   '@esbuild/freebsd-x64@0.23.1':\n     optional: true\n \n+  '@esbuild/freebsd-x64@0.24.2':\n+    optional: true\n+\n   '@esbuild/linux-arm64@0.23.1':\n     optional: true\n \n+  '@esbuild/linux-arm64@0.24.2':\n+    optional: true\n+\n   '@esbuild/linux-arm@0.23.1':\n     optional: true\n \n+  '@esbuild/linux-arm@0.24.2':\n+    optional: true\n+\n   '@esbuild/linux-ia32@0.23.1':\n     optional: true\n \n+  '@esbuild/linux-ia32@0.24.2':\n+    optional: true\n+\n   '@esbuild/linux-loong64@0.23.1':\n     optional: true\n \n+  '@esbuild/linux-loong64@0.24.2':\n+    optional: true\n+\n   '@esbuild/linux-mips64el@0.23.1':\n     optional: true\n \n+  '@esbuild/linux-mips64el@0.24.2':\n+    optional: true\n+\n   '@esbuild/linux-ppc64@0.23.1':\n     optional: true\n \n+  '@esbuild/linux-ppc64@0.24.2':\n+    optional: true\n+\n   '@esbuild/linux-riscv64@0.23.1':\n     optional: true\n \n+  '@esbuild/linux-riscv64@0.24.2':\n+    optional: true\n+\n   '@esbuild/linux-s390x@0.23.1':\n     optional: true\n \n+  '@esbuild/linux-s390x@0.24.2':\n+    optional: true\n+\n   '@esbuild/linux-x64@0.23.1':\n     optional: true\n \n+  '@esbuild/linux-x64@0.24.2':\n+    optional: true\n+\n+  '@esbuild/netbsd-arm64@0.24.2':\n+    optional: true\n+\n   '@esbuild/netbsd-x64@0.23.1':\n     optional: true\n \n+  '@esbuild/netbsd-x64@0.24.2':\n+    optional: true\n+\n   '@esbuild/openbsd-arm64@0.23.1':\n     optional: true\n \n+  '@esbuild/openbsd-arm64@0.24.2':\n+    optional: true\n+\n   '@esbuild/openbsd-x64@0.23.1':\n     optional: true\n \n+  '@esbuild/openbsd-x64@0.24.2':\n+    optional: true\n+\n   '@esbuild/sunos-x64@0.23.1':\n     optional: true\n \n+  '@esbuild/sunos-x64@0.24.2':\n+    optional: true\n+\n   '@esbuild/win32-arm64@0.23.1':\n     optional: true\n \n+  '@esbuild/win32-arm64@0.24.2':\n+    optional: true\n+\n   '@esbuild/win32-ia32@0.23.1':\n     optional: true\n \n+  '@esbuild/win32-ia32@0.24.2':\n+    optional: true\n+\n   '@esbuild/win32-x64@0.23.1':\n     optional: true\n \n+  '@esbuild/win32-x64@0.24.2':\n+    optional: true\n+\n+  '@jridgewell/sourcemap-codec@1.5.0': {}\n+\n+  '@rollup/rollup-android-arm-eabi@4.31.0':\n+    optional: true\n+\n+  '@rollup/rollup-android-arm64@4.31.0':\n+    optional: true\n+\n+  '@rollup/rollup-darwin-arm64@4.31.0':\n+    optional: true\n+\n+  '@rollup/rollup-darwin-x64@4.31.0':\n+    optional: true\n+\n+  '@rollup/rollup-freebsd-arm64@4.31.0':\n+    optional: true\n+\n+  '@rollup/rollup-freebsd-x64@4.31.0':\n+    optional: true\n+\n+  '@rollup/rollup-linux-arm-gnueabihf@4.31.0':\n+    optional: true\n+\n+  '@rollup/rollup-linux-arm-musleabihf@4.31.0':\n+    optional: true\n+\n+  '@rollup/rollup-linux-arm64-gnu@4.31.0':\n+    optional: true\n+\n+  '@rollup/rollup-linux-arm64-musl@4.31.0':\n+    optional: true\n+\n+  '@rollup/rollup-linux-loongarch64-gnu@4.31.0':\n+    optional: true\n+\n+  '@rollup/rollup-linux-powerpc64le-gnu@4.31.0':\n+    optional: true\n+\n+  '@rollup/rollup-linux-riscv64-gnu@4.31.0':\n+    optional: true\n+\n+  '@rollup/rollup-linux-s390x-gnu@4.31.0':\n+    optional: true\n+\n+  '@rollup/rollup-linux-x64-gnu@4.31.0':\n+    optional: true\n+\n+  '@rollup/rollup-linux-x64-musl@4.31.0':\n+    optional: true\n+\n+  '@rollup/rollup-win32-arm64-msvc@4.31.0':\n+    optional: true\n+\n+  '@rollup/rollup-win32-ia32-msvc@4.31.0':\n+    optional: true\n+\n+  '@rollup/rollup-win32-x64-msvc@4.31.0':\n+    optional: true\n+\n   '@types/blessed@0.1.25':\n     dependencies:\n       '@types/node': 22.10.7\n \n+  '@types/estree@1.0.6': {}\n+\n   '@types/node@22.10.7':\n     dependencies:\n       undici-types: 6.20.0\n \n+  '@vitest/expect@3.0.3':\n+    dependencies:\n+      '@vitest/spy': 3.0.3\n+      '@vitest/utils': 3.0.3\n+      chai: 5.1.2\n+      tinyrainbow: 2.0.0\n+\n+  '@vitest/mocker@3.0.3(vite@6.0.11(@types/node@22.10.7)(tsx@4.19.2))':\n+    dependencies:\n+      '@vitest/spy': 3.0.3\n+      estree-walker: 3.0.3\n+      magic-string: 0.30.17\n+    optionalDependencies:\n+      vite: 6.0.11(@types/node@22.10.7)(tsx@4.19.2)\n+\n+  '@vitest/pretty-format@3.0.3':\n+    dependencies:\n+      tinyrainbow: 2.0.0\n+\n+  '@vitest/runner@3.0.3':\n+    dependencies:\n+      '@vitest/utils': 3.0.3\n+      pathe: 2.0.2\n+\n+  '@vitest/snapshot@3.0.3':\n+    dependencies:\n+      '@vitest/pretty-format': 3.0.3\n+      magic-string: 0.30.17\n+      pathe: 2.0.2\n+\n+  '@vitest/spy@3.0.3':\n+    dependencies:\n+      tinyspy: 3.0.2\n+\n+  '@vitest/utils@3.0.3':\n+    dependencies:\n+      '@vitest/pretty-format': 3.0.3\n+      loupe: 3.1.2\n+      tinyrainbow: 2.0.0\n+\n+  assertion-error@2.0.1: {}\n+\n   blessed@0.1.81: {}\n \n+  cac@6.7.14: {}\n+\n+  chai@5.1.2:\n+    dependencies:\n+      assertion-error: 2.0.1\n+      check-error: 2.1.1\n+      deep-eql: 5.0.2\n+      loupe: 3.1.2\n+      pathval: 2.0.0\n+\n+  check-error@2.1.1: {}\n+\n   commander@13.1.0: {}\n \n+  debug@4.4.0:\n+    dependencies:\n+      ms: 2.1.3\n+\n+  deep-eql@5.0.2: {}\n+\n+  es-module-lexer@1.6.0: {}\n+\n   esbuild@0.23.1:\n     optionalDependencies:\n       '@esbuild/aix-ppc64': 0.23.1\n@@ -337,6 +1001,40 @@ snapshots:\n       '@esbuild/win32-ia32': 0.23.1\n       '@esbuild/win32-x64': 0.23.1\n \n+  esbuild@0.24.2:\n+    optionalDependencies:\n+      '@esbuild/aix-ppc64': 0.24.2\n+      '@esbuild/android-arm': 0.24.2\n+      '@esbuild/android-arm64': 0.24.2\n+      '@esbuild/android-x64': 0.24.2\n+      '@esbuild/darwin-arm64': 0.24.2\n+      '@esbuild/darwin-x64': 0.24.2\n+      '@esbuild/freebsd-arm64': 0.24.2\n+      '@esbuild/freebsd-x64': 0.24.2\n+      '@esbuild/linux-arm': 0.24.2\n+      '@esbuild/linux-arm64': 0.24.2\n+      '@esbuild/linux-ia32': 0.24.2\n+      '@esbuild/linux-loong64': 0.24.2\n+      '@esbuild/linux-mips64el': 0.24.2\n+      '@esbuild/linux-ppc64': 0.24.2\n+      '@esbuild/linux-riscv64': 0.24.2\n+      '@esbuild/linux-s390x': 0.24.2\n+      '@esbuild/linux-x64': 0.24.2\n+      '@esbuild/netbsd-arm64': 0.24.2\n+      '@esbuild/netbsd-x64': 0.24.2\n+      '@esbuild/openbsd-arm64': 0.24.2\n+      '@esbuild/openbsd-x64': 0.24.2\n+      '@esbuild/sunos-x64': 0.24.2\n+      '@esbuild/win32-arm64': 0.24.2\n+      '@esbuild/win32-ia32': 0.24.2\n+      '@esbuild/win32-x64': 0.24.2\n+\n+  estree-walker@3.0.3:\n+    dependencies:\n+      '@types/estree': 1.0.6\n+\n+  expect-type@1.1.0: {}\n+\n   fsevents@2.3.3:\n     optional: true\n \n@@ -344,8 +1042,73 @@ snapshots:\n     dependencies:\n       resolve-pkg-maps: 1.0.0\n \n+  loupe@3.1.2: {}\n+\n+  magic-string@0.30.17:\n+    dependencies:\n+      '@jridgewell/sourcemap-codec': 1.5.0\n+\n+  ms@2.1.3: {}\n+\n+  nanoid@3.3.8: {}\n+\n+  pathe@2.0.2: {}\n+\n+  pathval@2.0.0: {}\n+\n+  picocolors@1.1.1: {}\n+\n+  postcss@8.5.1:\n+    dependencies:\n+      nanoid: 3.3.8\n+      picocolors: 1.1.1\n+      source-map-js: 1.2.1\n+\n   resolve-pkg-maps@1.0.0: {}\n \n+  rollup@4.31.0:\n+    dependencies:\n+      '@types/estree': 1.0.6\n+    optionalDependencies:\n+      '@rollup/rollup-android-arm-eabi': 4.31.0\n+      '@rollup/rollup-android-arm64': 4.31.0\n+      '@rollup/rollup-darwin-arm64': 4.31.0\n+      '@rollup/rollup-darwin-x64': 4.31.0\n+      '@rollup/rollup-freebsd-arm64': 4.31.0\n+      '@rollup/rollup-freebsd-x64': 4.31.0\n+      '@rollup/rollup-linux-arm-gnueabihf': 4.31.0\n+      '@rollup/rollup-linux-arm-musleabihf': 4.31.0\n+      '@rollup/rollup-linux-arm64-gnu': 4.31.0\n+      '@rollup/rollup-linux-arm64-musl': 4.31.0\n+      '@rollup/rollup-linux-loongarch64-gnu': 4.31.0\n+      '@rollup/rollup-linux-powerpc64le-gnu': 4.31.0\n+      '@rollup/rollup-linux-riscv64-gnu': 4.31.0\n+      '@rollup/rollup-linux-s390x-gnu': 4.31.0\n+      '@rollup/rollup-linux-x64-gnu': 4.31.0\n+      '@rollup/rollup-linux-x64-musl': 4.31.0\n+      '@rollup/rollup-win32-arm64-msvc': 4.31.0\n+      '@rollup/rollup-win32-ia32-msvc': 4.31.0\n+      '@rollup/rollup-win32-x64-msvc': 4.31.0\n+      fsevents: 2.3.3\n+\n+  siginfo@2.0.0: {}\n+\n+  source-map-js@1.2.1: {}\n+\n+  stackback@0.0.2: {}\n+\n+  std-env@3.8.0: {}\n+\n+  tinybench@2.9.0: {}\n+\n+  tinyexec@0.3.2: {}\n+\n+  tinypool@1.0.2: {}\n+\n+  tinyrainbow@2.0.0: {}\n+\n+  tinyspy@3.0.2: {}\n+\n   tslib@2.8.1: {}\n \n   tsx@4.19.2:\n@@ -358,3 +1121,77 @@ snapshots:\n   typescript@5.7.3: {}\n \n   undici-types@6.20.0: {}\n+\n+  vite-node@3.0.3(@types/node@22.10.7)(tsx@4.19.2):\n+    dependencies:\n+      cac: 6.7.14\n+      debug: 4.4.0\n+      es-module-lexer: 1.6.0\n+      pathe: 2.0.2\n+      vite: 6.0.11(@types/node@22.10.7)(tsx@4.19.2)\n+    transitivePeerDependencies:\n+      - '@types/node'\n+      - jiti\n+      - less\n+      - lightningcss\n+      - sass\n+      - sass-embedded\n+      - stylus\n+      - sugarss\n+      - supports-color\n+      - terser\n+      - tsx\n+      - yaml\n+\n+  vite@6.0.11(@types/node@22.10.7)(tsx@4.19.2):\n+    dependencies:\n+      esbuild: 0.24.2\n+      postcss: 8.5.1\n+      rollup: 4.31.0\n+    optionalDependencies:\n+      '@types/node': 22.10.7\n+      fsevents: 2.3.3\n+      tsx: 4.19.2\n+\n+  vitest@3.0.3(@types/node@22.10.7)(tsx@4.19.2):\n+    dependencies:\n+      '@vitest/expect': 3.0.3\n+      '@vitest/mocker': 3.0.3(vite@6.0.11(@types/node@22.10.7)(tsx@4.19.2))\n+      '@vitest/pretty-format': 3.0.3\n+      '@vitest/runner': 3.0.3\n+      '@vitest/snapshot': 3.0.3\n+      '@vitest/spy': 3.0.3\n+      '@vitest/utils': 3.0.3\n+      chai: 5.1.2\n+      debug: 4.4.0\n+      expect-type: 1.1.0\n+      magic-string: 0.30.17\n+      pathe: 2.0.2\n+      std-env: 3.8.0\n+      tinybench: 2.9.0\n+      tinyexec: 0.3.2\n+      tinypool: 1.0.2\n+      tinyrainbow: 2.0.0\n+      vite: 6.0.11(@types/node@22.10.7)(tsx@4.19.2)\n+      vite-node: 3.0.3(@types/node@22.10.7)(tsx@4.19.2)\n+      why-is-node-running: 2.3.0\n+    optionalDependencies:\n+      '@types/node': 22.10.7\n+    transitivePeerDependencies:\n+      - jiti\n+      - less\n+      - lightningcss\n+      - msw\n+      - sass\n+      - sass-embedded\n+      - stylus\n+      - sugarss\n+      - supports-color\n+      - terser\n+      - tsx\n+      - yaml\n+\n+  why-is-node-running@2.3.0:\n+    dependencies:\n+      siginfo: 2.0.0\n+      stackback: 0.0.2\ndiff --git src/index.ts src/index.ts\nindex 46f5434..ed2d62f 100755\n--- src/index.ts\n+++ src/index.ts\n@@ -250,21 +250,24 @@ function createBlessedUI(): BlessedUI {\n   return { screen, outputScreen: testResultsLog, reasoningLog };\n }\n \n+function debug(...messages: string[]) {\n+  ui.outputScreen.setContent(\n+    `${ui.outputScreen.getContent()}\\n${messages.join(\"\\n\")}`\n+  );\n+  ui.screen.render();\n+}\n+\n function printReasoningContent(chunkJsonLine = \"data: {}\", config: Config) {\n   try {\n     const json = JSON.parse(chunkJsonLine.split(\":\")[1])[0];\n     const newReasoningContent = json.delta.reasoning_content;\n     if (newReasoningContent) {\n       if (config.debug) {\n-        console.debug(\"newReasoningContent\", newReasoningContent);\n+        debug(\"newReasoningContent\", newReasoningContent);\n       }\n-      const cleanContent = newReasoningContent\n-        .replace(/^\\n+/, \"\") // Remove leading newlines\n-        .replace(/\\n{3,}/g, \"\\n\\n\") // Replace 3+ consecutive newlines with 2\n-        .replace(/\\s+$/, \"\"); // Remove trailing whitespace\n \n       const currentContent = ui.reasoningLog.getContent();\n-      ui.reasoningLog.setContent(currentContent + cleanContent);\n+      ui.reasoningLog.setContent(currentContent + newReasoningContent);\n       ui.screen.render();\n       return;\n     }\n@@ -272,9 +275,9 @@ function printReasoningContent(chunkJsonLine = \"data: {}\", config: Config) {\n     // it's not a delta\n   }\n \n-  const parts = chunkJsonLine.split(\"data: \");\n+  const parts = chunkJsonLine.split(\": \");\n   if (parts.length < 2) {\n-    console.debug(`Invalid chunk: ${chunkJsonLine}`);\n+    debug(`Invalid chunk: ${chunkJsonLine}`);\n     return;\n   }\n \n@@ -284,16 +287,13 @@ function printReasoningContent(chunkJsonLine = \"data: {}\", config: Config) {\n       json?.choices?.[0]?.delta?.reasoning_content ||\n       json?.delta?.reasoning_content;\n     if (newReasoningContent) {\n-      const cleanContent = newReasoningContent\n-        .replace(/^\\n+/, \"\") // Remove leading newlines\n-        .replace(/\\n{3,}/g, \"\\n\\n\") // Replace 3+ consecutive newlines with 2\n-        .replace(/\\s+$/, \"\"); // Remove trailing whitespace\n+      const cleanContent = newReasoningContent;\n       const currentContent = ui.reasoningLog.getContent();\n       ui.reasoningLog.setContent(currentContent + cleanContent);\n       ui.screen.render();\n     }\n   } catch (error: unknown) {\n-    console.debug(`Error parsing JSON: ${error}`);\n+    debug(`Error parsing JSON: ${error}`);\n   }\n }\n \n@@ -313,16 +313,21 @@ async function streamAIResponse(\n         },\n       },\n       (res) => {\n-        let response = \"\";\n+        let responses: any[] = [];\n         res.on(\"data\", (chunk) => {\n           const chunkStr = chunk.toString();\n+          handleErrorChunk(chunkStr, config);\n           if (!config.hideReasoning) {\n             printReasoningContent(chunkStr, config);\n           }\n-          handleErrorChunk(chunkStr, config);\n-          response += chunkStr;\n+          try {\n+            const json = JSON.parse(chunkStr.split(\": \")[1]);\n+            responses.push(json);\n+          } catch (error) {\n+            debug(`Error parsing JSON: ${chunkStr}`);\n+          }\n         });\n-        res.on(\"end\", () => resolve(response));\n+        res.on(\"end\", () => resolve(responses.join(\"\")));\n       }\n     );\n \n@@ -397,21 +402,17 @@ async function main() {\n     ui.outputScreen.setContent(`${currentContent}\\nAnalyzing test failures...`);\n     ui.screen.render();\n \n-    const aiResponse = await streamAIResponse(config, messages);\n+    const aiResponses = await streamAIResponse(config, messages);\n \n     await fs.promises.writeFile(\n       config.historyFile,\n-      JSON.stringify(\n-        [...messages, { role: \"assistant\", content: aiResponse }],\n-        null,\n-        2\n-      )\n+      JSON.stringify([...messages, ...aiResponses], null, 2)\n     );\n \n     ui.outputScreen.destroy();\n     ui.reasoningLog.destroy();\n     ui.screen.destroy();\n-    console.log(aiResponse);\n+    console.log(aiResponses);\n   } catch (error) {\n     ui.outputScreen.destroy();\n     ui.reasoningLog.destroy();\n\n\n## Test Files\n// /Users/mohsen/code/askds/src/index.ts\n#!/usr/bin/env node\nimport { execSync, spawn } from \"child_process\";\nimport https from \"https\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { program } from \"commander\";\nimport process, { config } from \"process\";\nimport blessed from \"blessed\";\n\ninterface Config {\n  debug: boolean;\n  testCommand: string;\n  serializeCommand: string;\n  apiKey: string;\n  historyFile: string;\n  testDirs: string[];\n  sourceDirs: string[];\n  testFileExt: string;\n  systemPromptFile?: string;\n  hideReasoning: boolean;\n}\n\ninterface Message {\n  role: \"system\" | \"user\" | \"assistant\";\n  content: string;\n}\n\nconst DEFAULT_PROMPT = [\n  \"You are a senior software engineer helping debug test failures. Analyze:\",\n  \"1. Test output\",\n  \"2. Repository structure\",\n  \"3. Code changes (git diff)\",\n  \"4. Relevant test files\",\n  \"Provide concise, actionable solutions.\",\n].join(\"\\n\");\n\nconst DEFAULT_CONFIG: Omit<Config, \"apiKey\" | \"testCommand\"> = {\n  debug: false,\n  serializeCommand: \"yek\",\n  historyFile: path.join(process.cwd(), \".askai_history.json\"),\n  testDirs: [\"test\", \"tests\"],\n  sourceDirs: [\"src\"],\n  testFileExt: \".ts\",\n  systemPromptFile: \"\",\n  hideReasoning: false,\n};\n\nconst ui = createBlessedUI();\n\nfunction loadConfig(): Config {\n  program\n    .version(\"1.0.0\")\n    .option(\"--debug\", \"Enable debug mode\")\n    .option(\"--serialize <command>\", \"Repository serialization command\")\n    .option(\"--system-prompt <file>\", \"Path to system prompt file\")\n    .option(\"--hide-reasoning\", \"Hide reasoning content\")\n    .arguments(\"[testCommand...]\")\n    .action((testCommand) => {\n      program.opts().testCommand = testCommand.join(\" \");\n    })\n    .parse(process.argv);\n\n  const apiKey = process.env.DEEPSEEK_API_KEY;\n  if (!apiKey) {\n    console.error(\"Error: DEEPSEEK_API_KEY environment variable is required\");\n    process.exit(1);\n  }\n\n  return {\n    ...DEFAULT_CONFIG,\n    apiKey,\n    debug: program.opts().debug || false,\n    serializeCommand:\n      program.opts().serialize || DEFAULT_CONFIG.serializeCommand,\n    testCommand: program.opts().testCommand,\n    systemPromptFile: program.opts().systemPrompt,\n  };\n}\n\nasync function executeCommand(\n  command: string,\n  args: string[],\n  options: {\n    shell: boolean;\n  } = {\n    shell: true,\n  }\n): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const proc = spawn(command, args, {\n      shell: options.shell,\n      stdio: \"pipe\",\n    });\n    let output = \"\";\n\n    proc.stdout.on(\"data\", (data) => (output += data.toString()));\n    proc.stderr.on(\"data\", (data) => (output += data.toString()));\n\n    proc.on(\"close\", (code) => {\n      code === 0\n        ? resolve(output)\n        : reject(new Error(`Command failed with code ${code}\\n${output}`));\n    });\n  });\n}\n\nasync function runTestCommand(\n  testCommand: string,\n  config: Config\n): Promise<string> {\n  const [cmd, ...args] = testCommand.split(/\\s+/);\n  try {\n    if (config.debug) {\n      ui.outputScreen.setContent(`Running test command: ${testCommand}`);\n    }\n    return await executeCommand(cmd, args);\n  } catch (error) {\n    return error instanceof Error ? error.message : String(error);\n  }\n}\n\nasync function serializeRepository(\n  command: string,\n  config: Config\n): Promise<string> {\n  const [cmd, ...args] = command.split(/\\s+/);\n  const result = await executeCommand(cmd, args);\n  if (config.debug) {\n    ui.outputScreen.setContent(`Serialized repository size: ${result.length}`);\n  }\n  return result;\n}\n\nfunction findTestFiles(output: string, config: Config): string[] {\n  const failedTests = new Set(\n    output\n      .split(\"\\n\")\n      .filter((line) => line.toLowerCase().includes(\"fail\"))\n      .map((line) => line.match(/\\b(test\\w*)\\b/)?.[1])\n      .filter(Boolean) as string[]\n  );\n\n  const searchDirs = [...config.testDirs, ...config.sourceDirs]\n    .map((dir) => path.resolve(process.cwd(), dir))\n    .filter((dir) => fs.existsSync(dir));\n  const testFiles = new Set<string>();\n\n  for (const test of failedTests) {\n    for (const dir of searchDirs) {\n      try {\n        const files = fs.readdirSync(dir, { recursive: true });\n        files.forEach((file) => {\n          if (\n            typeof file === \"string\" &&\n            file.endsWith(config.testFileExt) &&\n            fs.readFileSync(path.join(dir, file), \"utf8\").includes(test)\n          ) {\n            testFiles.add(path.join(dir, file));\n          }\n        });\n      } catch (error) {\n        ui.outputScreen.setContent(`Error searching ${dir}: ${error}`);\n      }\n    }\n  }\n\n  return Array.from(testFiles);\n}\n\nasync function getChatHistory(config: Config): Promise<Message[]> {\n  try {\n    const content = await fs.promises.readFile(config.historyFile, \"utf8\");\n    return JSON.parse(content);\n  } catch {\n    return [\n      {\n        role: \"system\",\n        content: config.systemPromptFile\n          ? fs.existsSync(config.systemPromptFile)\n            ? fs.readFileSync(config.systemPromptFile, \"utf8\")\n            : DEFAULT_PROMPT\n          : DEFAULT_PROMPT,\n      },\n    ];\n  }\n}\nfunction handleErrorChunk(chunk: string, config: Config) {\n  try {\n    const json = JSON.parse(chunk);\n    if (json.error) {\n      console.error(\"Error:\", json.error.message);\n      process.exit(1);\n    }\n  } catch {\n    // it's not an error\n  }\n}\n\ninterface BlessedUI {\n  screen: blessed.Widgets.Screen;\n  outputScreen: blessed.Widgets.BoxElement;\n  reasoningLog: blessed.Widgets.BoxElement;\n}\n\nfunction createBlessedUI(): BlessedUI {\n  const screen = blessed.screen({\n    smartCSR: true,\n    title: \"DeepSeek Test Analyzer\",\n  });\n\n  const testResultsLog = blessed.box({\n    parent: screen,\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"50%\",\n    content: \"\",\n    border: {\n      type: \"line\",\n    },\n    label: \" Test Results \",\n    mouse: true,\n    scrollable: true,\n    alwaysScroll: true,\n  });\n\n  const reasoningLog = blessed.box({\n    parent: screen,\n    top: \"50%\",\n    left: 0,\n    width: \"100%\",\n    height: \"50%\",\n    content: \"\",\n    border: {\n      type: \"line\",\n    },\n    label: \" Reasoning \",\n    mouse: true,\n    scrollable: true,\n    alwaysScroll: true,\n  });\n\n  screen.key([\"escape\", \"q\", \"C-c\"], () => {\n    screen.destroy();\n    process.exit(0);\n  });\n\n  screen.render();\n\n  return { screen, outputScreen: testResultsLog, reasoningLog };\n}\n\nfunction debug(...messages: string[]) {\n  ui.outputScreen.setContent(\n    `${ui.outputScreen.getContent()}\\n${messages.join(\"\\n\")}`\n  );\n  ui.screen.render();\n}\n\nfunction printReasoningContent(chunkJsonLine = \"data: {}\", config: Config) {\n  try {\n    const json = JSON.parse(chunkJsonLine.split(\":\")[1])[0];\n    const newReasoningContent = json.delta.reasoning_content;\n    if (newReasoningContent) {\n      if (config.debug) {\n        debug(\"newReasoningContent\", newReasoningContent);\n      }\n\n      const currentContent = ui.reasoningLog.getContent();\n      ui.reasoningLog.setContent(currentContent + newReasoningContent);\n      ui.screen.render();\n      return;\n    }\n  } catch (error: unknown) {\n    // it's not a delta\n  }\n\n  const parts = chunkJsonLine.split(\": \");\n  if (parts.length < 2) {\n    debug(`Invalid chunk: ${chunkJsonLine}`);\n    return;\n  }\n\n  try {\n    const json = JSON.parse(parts[1]);\n    const newReasoningContent =\n      json?.choices?.[0]?.delta?.reasoning_content ||\n      json?.delta?.reasoning_content;\n    if (newReasoningContent) {\n      const cleanContent = newReasoningContent;\n      const currentContent = ui.reasoningLog.getContent();\n      ui.reasoningLog.setContent(currentContent + cleanContent);\n      ui.screen.render();\n    }\n  } catch (error: unknown) {\n    debug(`Error parsing JSON: ${error}`);\n  }\n}\n\nasync function streamAIResponse(\n  config: Config,\n  messages: Message[]\n): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const req = https.request(\n      {\n        hostname: \"api.deepseek.com\",\n        path: \"/chat/completions\",\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${config.apiKey}`,\n        },\n      },\n      (res) => {\n        let responses: any[] = [];\n        res.on(\"data\", (chunk) => {\n          const chunkStr = chunk.toString();\n          handleErrorChunk(chunkStr, config);\n          if (!config.hideReasoning) {\n            printReasoningContent(chunkStr, config);\n          }\n          try {\n            const json = JSON.parse(chunkStr.split(\": \")[1]);\n            responses.push(json);\n          } catch (error) {\n            debug(`Error parsing JSON: ${chunkStr}`);\n          }\n        });\n        res.on(\"end\", () => resolve(responses.join(\"\")));\n      }\n    );\n\n    req.on(\"error\", reject);\n    req.write(\n      JSON.stringify({\n        model: \"deepseek-reasoner\",\n        messages,\n        stream: true,\n      })\n    );\n    req.end();\n  });\n}\n\nasync function getGitDiff(config: Config) {\n  const diff = execSync(\"git diff | cat\", { stdio: \"pipe\" }).toString();\n  if (diff.includes(\"No such file or directory\")) {\n    return \"\";\n  }\n  if (config.debug) {\n    const currentContent = ui.outputScreen.getContent();\n    ui.outputScreen.setContent(`${currentContent}\\nGit Diff:\\n${diff}`);\n    ui.screen.render();\n  }\n  return diff;\n}\n\nasync function main() {\n  const config = loadConfig();\n  if (config.debug) {\n    const debugContent = `Configuration: ${JSON.stringify(config)}`;\n    ui.outputScreen.setContent(debugContent);\n    ui.screen.render();\n  }\n\n  try {\n    const [testOutput, repoStructure, gitDiff] = await Promise.all([\n      runTestCommand(config.testCommand, config),\n      serializeRepository(config.serializeCommand, config),\n      getGitDiff(config),\n    ]);\n\n    ui.outputScreen.setContent(\n      [testOutput, repoStructure, gitDiff].join(\"\\n\\n\")\n    );\n    ui.screen.render();\n\n    if (config.debug) {\n      const currentContent = ui.outputScreen.getContent();\n      ui.outputScreen.setContent(`${currentContent}\\ngitDiff: ${gitDiff}`);\n      ui.screen.render();\n    }\n\n    const testFiles = findTestFiles(testOutput, config);\n    const testContents = testFiles\n      .map((file) => `// ${file}\\n${fs.readFileSync(file, \"utf8\")}`)\n      .join(\"\\n\\n\");\n\n    const messages = await getChatHistory(config);\n    messages.push({\n      role: \"user\",\n      content: [\n        `## Repository Structure\\n${repoStructure}`,\n        `## Test Output\\n${testOutput}`,\n        `## Git Diff\\n${gitDiff}`,\n        `## Test Files\\n${testContents}`,\n      ].join(\"\\n\\n\"),\n    });\n\n    const currentContent = ui.outputScreen.getContent();\n    ui.outputScreen.setContent(`${currentContent}\\nAnalyzing test failures...`);\n    ui.screen.render();\n\n    const aiResponses = await streamAIResponse(config, messages);\n\n    await fs.promises.writeFile(\n      config.historyFile,\n      JSON.stringify([...messages, ...aiResponses], null, 2)\n    );\n\n    ui.outputScreen.destroy();\n    ui.reasoningLog.destroy();\n    ui.screen.destroy();\n    console.log(aiResponses);\n  } catch (error) {\n    ui.outputScreen.destroy();\n    ui.reasoningLog.destroy();\n    ui.screen.destroy();\n    console.error(\"Error:\", error);\n  }\n}\n\nmain().catch(console.error);\n"
  },
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]",
  "[",
  "o",
  "b",
  "j",
  "e",
  "c",
  "t",
  " ",
  "O",
  "b",
  "j",
  "e",
  "c",
  "t",
  "]"
]